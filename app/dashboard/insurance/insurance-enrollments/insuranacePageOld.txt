//file: app/dashboard/insurance/insurance-enrollments/page.js

"use client";
import React, { useEffect, useState } from "react";
import { supabase } from "@/lib/supabase";
import { useAuthStore } from "@/lib/store/authStore";
import RoleGuard from "@/components/RoleGuard";
import { ToastContainer, toast } from "react-toastify";
import { formatResidentNumber, formatPhoneNumber } from "@/lib/utils/formattingUtils";
import Link from "next/link";

// Import all necessary stores directly
import useSiteStore from "@/lib/store/siteStore";
import useWorkerStore from "@/lib/store/workerStore";
import useWorkHistoryStore from "@/lib/store/workHistoryStore";
import useInsuranceStatusStore from "@/lib/store/insuranceStatusStore";
import useInsuranceEnrollmentStore from "@/lib/store/insuranceEnrollmentStore";
import useInsuranceStore from "@/lib/store/useInsuranceStore";

function InsuranceEnrollmentsPage() {
  // Auth state
  const { user } = useAuthStore();

  // UI state
  const [searchTerm, setSearchTerm] = useState("");
  const [activeTab, setActiveTab] = useState(0);
  const [isLoading, setIsLoading] = useState(false);

  // Date selection state
  const currentYear = new Date().getFullYear().toString();
  const currentMonth = (new Date().getMonth() + 1).toString().padStart(2, "0");
  const [selectedYear, setSelectedYear] = useState(currentYear);
  const [selectedMonth, setSelectedMonth] = useState(currentMonth);

  // Get state from site store
  const { sites, selectedSite, setSelectedSite, companyName } = useSiteStore();

  // Get state from worker store
  const {
    registeredWorkers,
    activeWorkers,
    inactiveWorkers,
    selectedWorkerId,
    showDetail,
    setSelectedWorkerId,
    loadWorkers,
  } = useWorkerStore();

  // Get state from work history store
  const { workersHistory } = useWorkHistoryStore();

  // Get state from insurance status store
  const { manualSettings, getStatusStyle, getStatusText, getEffectiveStatus } =
    useInsuranceStatusStore();

  // Get state from insurance enrollment store
  const {
    isEnrolled,
    enrollmentRecords,
    handleInsuranceAcquisition,
    handleInsuranceLoss,
    loadInsuranceEnrollments,
  } = useInsuranceEnrollmentStore();

  // Handle insurance operations from insurance store
  const { handleInsuranceStatusChange, handleReasonUpdate, initialize } = useInsuranceStore();

  // Initialize stores when component mounts
  // 1. 사용자 인증 후 초기화
  useEffect(() => {
    if (user) {
      setIsLoading(true);
      initialize(user.id)
        .then(() => setIsLoading(false))
        .catch((error) => {
          console.error("초기화 오류:", error);
          setIsLoading(false);
        });
    }
  }, [user, initialize]);

  // 2. 현장 또는 날짜 변경 시 근로자 목록 로드
  useEffect(() => {
    if (selectedSite) {
      const yearMonth = `${selectedYear}-${selectedMonth}`;
      loadWorkers(selectedSite, yearMonth);
    }
  }, [selectedSite, selectedYear, selectedMonth, loadWorkers]);

  // 3. 근로자 데이터 변경 시 이력 및 보험 상태 정보 로드
  // app/dashboard/insurance/insurance-enrollments/page.js
  // 근로자 데이터 변경 시 이력 및 보험 상태 정보 로드
  useEffect(() => {
    if (selectedSite && selectedYear && selectedMonth) {
      const yearMonth = `${selectedYear}-${selectedMonth}`;

      // 수정 전 코드
      /*
    // 모든 근로자 목록 통합 (중복 제거)
    const allWorkers = [
      ...(registeredWorkers || []),
      ...(activeWorkers || []),
      ...(inactiveWorkers || []),
    ];

    const uniqueWorkers = Array.from(
      new Map(allWorkers.map((worker) => [worker.worker_id, worker])).values()
    );

    if (uniqueWorkers.length > 0) {
      setIsLoading(true);

      // 각 근로자에 대해 이력 및 보험 상태 정보를 병렬로 로드
      const loadPromises = uniqueWorkers.map((worker) => {
        const workerId = worker.worker_id;
        return Promise.all([
          // 이력 정보 로드
          useWorkHistoryStore.getState().loadWorkersHistory(workerId, selectedSite, yearMonth),
          // 보험 상태 정보 로드
          useInsuranceStatusStore
            .getState()
            .loadInsuranceStatus(workerId, selectedSite, yearMonth),
          // 필요한 경우 보험 가입 정보도 로드
          useInsuranceEnrollmentStore.getState().loadInsuranceEnrollments(workerId, selectedSite),
        ]);
      });

      Promise.all(loadPromises)
        .catch((error) => console.error("데이터 로드 오류:", error))
        .finally(() => setIsLoading(false));
    }
    */

      // 수정 후 코드
      // 모든 근로자 목록 통합
      const allWorkers = [];

      // 각 카테고리별로 근로자 추가 (중복 확인)
      const addedWorkerIds = new Set();

      // 1. 신규 가입 대상자 먼저 추가
      if (registeredWorkers && registeredWorkers.length > 0) {
        registeredWorkers.forEach((worker) => {
          if (!addedWorkerIds.has(worker.worker_id)) {
            allWorkers.push(worker);
            addedWorkerIds.add(worker.worker_id);
          }
        });
      }

      // 2. 활성 근로자 추가
      if (activeWorkers && activeWorkers.length > 0) {
        activeWorkers.forEach((worker) => {
          if (!addedWorkerIds.has(worker.worker_id)) {
            allWorkers.push(worker);
            addedWorkerIds.add(worker.worker_id);
          }
        });
      }

      // 3. 상실 대상자 추가
      if (inactiveWorkers && inactiveWorkers.length > 0) {
        inactiveWorkers.forEach((worker) => {
          if (!addedWorkerIds.has(worker.worker_id)) {
            allWorkers.push(worker);
            addedWorkerIds.add(worker.worker_id);
          }
        });
      }

      if (allWorkers.length > 0) {
        setIsLoading(true);

        // 각 근로자에 대해 이력 및 보험 상태 정보를 병렬로 로드
        const loadPromises = allWorkers.map((worker) => {
          const workerId = worker.worker_id;
          return Promise.all([
            // 이력 정보 로드
            useWorkHistoryStore.getState().loadWorkersHistory(workerId, selectedSite, yearMonth),
            // 보험 상태 정보 로드
            useInsuranceStatusStore
              .getState()
              .loadInsuranceStatus(workerId, selectedSite, yearMonth),
            // 필요한 경우 보험 가입 정보도 로드
            useInsuranceEnrollmentStore.getState().loadInsuranceEnrollments(workerId, selectedSite),
          ]);
        });

        Promise.all(loadPromises)
          .catch((error) => console.error("데이터 로드 오류:", error))
          .finally(() => setIsLoading(false));
      }
    }
  }, [
    registeredWorkers,
    activeWorkers,
    inactiveWorkers,
    selectedSite,
    selectedYear,
    selectedMonth,
  ]);

  // 선택된 근로자에 대한 상세 정보 및 보험 상태 로드
  useEffect(() => {
    if (selectedWorkerId && selectedSite) {
      setIsLoading(true);
      const yearMonth = `${selectedYear}-${selectedMonth}`;

      // 모든 필요한 데이터 병렬로 로드
      Promise.all([
        // 근로자 상세 정보 로드 (필요한 경우)
        useWorkerStore.getState().fetchWorkerDetails(selectedWorkerId),

        // 보험 상태 정보 로드
        useInsuranceStatusStore
          .getState()
          .loadInsuranceStatus(selectedWorkerId, selectedSite, yearMonth),

        // 근로자 이력 데이터 로드
        useWorkHistoryStore
          .getState()
          .loadWorkersHistory(selectedWorkerId, selectedSite, yearMonth),

        // 보험 가입 이력 로드
        useInsuranceEnrollmentStore
          .getState()
          .loadInsuranceEnrollments(selectedWorkerId, selectedSite),
      ])
        .catch((error) => console.error("근로자 정보 로드 오류:", error))
        .finally(() => setIsLoading(false));
    }
  }, [selectedWorkerId, selectedSite, selectedYear, selectedMonth]);

  // Handle site selection change
  const handleSiteChange = (e) => {
    setSelectedSite(e.target.value);
  };

  // Handle year and month change
  const handleYearMonthChange = (e) => {
    const [year, month] = e.target.value.split("-");
    setSelectedYear(year);
    setSelectedMonth(month);
  };

  // Handle search
  const handleSearch = (e) => {
    setSearchTerm(e.target.value);
  };

  // Filter workers based on search term
  const filterWorkers = (workers) => {
    if (!searchTerm || !workers) return workers || [];
    return workers.filter(
      (worker) =>
        worker.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
        worker.resident_number.includes(searchTerm)
    );
  };

  // Handle acquisition with toast feedback
  const handleAcquisition = async (workerId, e) => {
    if (e) e.stopPropagation();

    setIsLoading(true);
    try {
      const yearMonth = `${selectedYear}-${selectedMonth}`;
      const result = await handleInsuranceAcquisition(workerId, selectedSite, yearMonth, [
        "national_pension",
        "health_insurance",
        "employment_insurance",
        "industrial_accident",
      ]);

      if (result.success) {
        toast.success(result.message);
      } else {
        toast.error(result.message);
      }
    } catch (error) {
      toast.error(`처리 실패: ${error.message}`);
    } finally {
      setIsLoading(false);
    }
  };

  // Handle loss with toast feedback
  const handleLoss = async (workerId, e) => {
    if (e) e.stopPropagation();

    setIsLoading(true);
    try {
      const result = await handleInsuranceLoss(workerId, selectedSite);

      if (result.success) {
        toast.success(result.message);
      } else {
        toast.error(result.message);
      }
    } catch (error) {
      toast.error(`처리 실패: ${error.message}`);
    } finally {
      setIsLoading(false);
    }
  };

  // Handle status change (UI state only)
  // Handle status change
  // Handle status change
  const handleStatusChange = async (workerId, insuranceType, newStatus, e) => {
    if (e) e.stopPropagation();

    setIsLoading(true);
    try {
      // 올바른 함수 호출 - 새로운 UI 전용 함수 사용
      const yearMonth = `${selectedYear}-${selectedMonth}`;
      const result = await useInsuranceStatusStore
        .getState()
        .updateInsuranceStatusUI(workerId, selectedSite, yearMonth, insuranceType, newStatus);

      if (result.success) {
        toast.info(
          `${getInsuranceTypeName(
            insuranceType
          )} 상태가 변경되었습니다. 저장 버튼을 클릭하여 변경사항을 저장하세요.`
        );
        return true;
      } else {
        toast.error(`상태 변경 실패: ${result.message}`);
        return false;
      }
    } catch (error) {
      console.error(`상태 변경 중 오류 발생:`, error);
      toast.error(`상태 변경 중 오류: ${error.message}`);
      return false;
    } finally {
      setIsLoading(false);
    }
  };

  // 보험 유형 이름 반환 함수 추가
  const getInsuranceTypeName = (insuranceType) => {
    switch (insuranceType) {
      case "national_pension":
        return "국민연금";
      case "health_insurance":
        return "건강보험";
      case "employment_insurance":
        return "고용보험";
      case "industrial_accident":
        return "산재보험";
      default:
        return insuranceType;
    }
  };

  // Handle reason update (UI state only)
  // 수동 사유 업데이트
  const handleReason = (workerId, reason, e) => {
    if (e) e.stopPropagation();

    try {
      const yearMonth = `${selectedYear}-${selectedMonth}`;

      // 올바른 함수 호출
      useInsuranceStatusStore
        .getState()
        .updateManualReason(workerId, selectedSite, yearMonth, reason);

      toast.info("사유가 변경되었습니다. 저장 버튼을 클릭하여 변경사항을 저장하세요.");
      return true;
    } catch (error) {
      console.error(`사유 업데이트 중 오류 발생:`, error);
      toast.error(`사유 업데이트 중 오류: ${error.message}`);
      return false;
    }
  };

  // Handle saving all settings
  // 모든 설정 저장 처리 함수
  const handleSaveAll = async () => {
    try {
      setIsLoading(true);
      toast.info("설정 저장 중...", { autoClose: false, toastId: "saving" });

      // 현재 년/월
      const yearMonth = `${selectedYear}-${selectedMonth}`;

      // 모든 수동 설정 및 근무 기록 데이터 가져오기
      // 주의: manualSettings가 더 이상 존재하지 않기 때문에 현재 상태를 사용
      const insuranceStatusStore = useInsuranceStatusStore.getState();
      const workerHistoryData = useWorkHistoryStore.getState().workersHistory;

      // 모든 근로자 ID 목록 생성 (중복 제거)
      const allWorkerIds = [
        ...(registeredWorkers || []).map((w) => w.worker_id),
        ...(activeWorkers || []).map((w) => w.worker_id),
        ...(inactiveWorkers || []).map((w) => w.worker_id),
      ].filter((id, index, self) => self.indexOf(id) === index);

      if (allWorkerIds.length === 0) {
        toast.info("저장할 근로자가 없습니다.");
        toast.dismiss("saving");
        setIsLoading(false);
        return;
      }

      // 결과 추적
      let successCount = 0;
      let errorCount = 0;

      // 각 근로자 처리
      for (const workerId of allWorkerIds) {
        try {
          // console.log("사용자 객체 구조:", user);
          // console.log("사용자 ID 타입:", typeof user?.id);
          // console.log("사용자 ID 값:", user?.id);
          // 캐시 키 생성
          const cacheKey = `${workerId}-${selectedSite}-${yearMonth}`;

          // 현재 상태 가져오기
          const insuranceStatus = insuranceStatusStore.insuranceStatus[cacheKey];

          // 각 보험에 대한 상태값 결정
          // 이제 insurance_enrollments 테이블에서 직접 각 보험의 상태를 조회
          const { data: existingRecord, error: checkError } = await supabase
            .from("insurance_enrollments")
            .select("*")
            .eq("worker_id", workerId)
            .eq("site_id", selectedSite)
            .eq("year_month", yearMonth)
            .maybeSingle();

          // DB 조회 오류 처리
          if (checkError && checkError.code !== "PGRST116") {
            console.error(`레코드 확인 오류:`, checkError);
            errorCount++;
            continue;
          }

          // 근무 이력 가져오기
          const workHistory = workerHistoryData[cacheKey] || {};

          // 각 보험 타입별 상태값 결정 (기존 값 유지 또는 자동 판단)
          const nationalPensionStatus =
            existingRecord?.national_pension_status ||
            (insuranceStatus?.nationalPension?.required ? "auto_required" : "auto_exempted");

          const healthInsuranceStatus =
            existingRecord?.health_insurance_status ||
            (insuranceStatus?.healthInsurance?.required ? "auto_required" : "auto_exempted");

          const employmentInsuranceStatus =
            existingRecord?.employment_insurance_status ||
            (insuranceStatus?.employmentInsurance?.required ? "auto_required" : "auto_exempted");

          const industrialAccidentStatus =
            existingRecord?.industrial_accident_status ||
            (insuranceStatus?.industrialAccident?.required ? "auto_required" : "auto_exempted");

          // 저장할 데이터 준비
          const settingsToSave = {
            worker_id: parseInt(workerId),
            site_id: selectedSite,
            year_month: yearMonth,

            // 보험 상태 필드
            national_pension_status: nationalPensionStatus,
            health_insurance_status: healthInsuranceStatus,
            employment_insurance_status: employmentInsuranceStatus,
            industrial_accident_status: industrialAccidentStatus,

            // 근무 정보 필드
            first_work_date: workHistory.firstWorkDate || null,
            previous_month_work_days: workHistory.previousMonthWorkDays || 0,
            previous_month_work_hours: workHistory.previousMonthWorkHours || 0,
            current_month_work_days: workHistory.currentMonthWorkDays || 0,
            current_month_work_hours: workHistory.currentMonthWorkHours || 0,

            // 수동 사유는 기존 값 유지
            manual_reason: existingRecord?.manual_reason || "",

            // 사용자 확정 정보
            enrollment_status: "confirmed", // 사용자 확정 상태로 변경
            user_confirmed: true, // 사용자 확정 표시
            user_confirmed_at: new Date().toISOString(), // 확정 시간 기록
            confirmed_by: user?.id || null, // 확정한 사용자 ID

            // 기타 상태 값은 기존 값 유지
            national_pension_reported: existingRecord?.national_pension_reported || false,
            health_insurance_reported: existingRecord?.health_insurance_reported || false,
            employment_insurance_reported: existingRecord?.employment_insurance_reported || false,
            industrial_accident_reported: existingRecord?.industrial_accident_reported || false,

            national_pension_acquisition_date:
              existingRecord?.national_pension_acquisition_date || null,
            health_insurance_acquisition_date:
              existingRecord?.health_insurance_acquisition_date || null,
            employment_insurance_acquisition_date:
              existingRecord?.employment_insurance_acquisition_date || null,
            industrial_accident_acquisition_date:
              existingRecord?.industrial_accident_acquisition_date || null,

            national_pension_loss_date: existingRecord?.national_pension_loss_date || null,
            health_insurance_loss_date: existingRecord?.health_insurance_loss_date || null,
            employment_insurance_loss_date: existingRecord?.employment_insurance_loss_date || null,
            industrial_accident_loss_date: existingRecord?.industrial_accident_loss_date || null,

            // 시스템 필드
            updated_at: new Date().toISOString(),
          };

          let result;
          if (existingRecord) {
            // 기존 레코드 업데이트
            result = await supabase
              .from("insurance_enrollments")
              .update(settingsToSave)
              .eq("enrollment_id", existingRecord.enrollment_id);
          } else {
            // 새 레코드 추가
            const insertData = {
              ...settingsToSave,
              created_at: new Date().toISOString(),
            };
            result = await supabase.from("insurance_enrollments").insert(insertData);
          }

          if (result.error) {
            console.error(`근로자 ID ${workerId} 설정 저장 오류:`, result.error);
            errorCount++;
          } else {
            successCount++;
          }
        } catch (error) {
          console.error(`근로자 ID ${workerId} 설정 저장 중 예외 발생:`, error);
          errorCount++;
        }
      }

      // 토스트 닫기
      toast.dismiss("saving");

      // 결과 표시
      if (errorCount === 0) {
        toast.success(`${successCount}개의 설정이 저장되었습니다.`);
      } else if (successCount === 0) {
        toast.error(`저장 실패: ${errorCount}개의 오류가 발생했습니다.`);
      } else {
        toast.warning(`${successCount}개 저장 성공, ${errorCount}개 저장 실패`);
      }

      // 데이터 다시 로드
      const yearMonthStr = `${selectedYear}-${selectedMonth}`;
      loadWorkers(selectedSite, yearMonthStr);

      // 오류 초기화
      useInsuranceStatusStore.getState().clearError();
    } catch (error) {
      console.error("설정 저장 오류:", error);
      toast.error("설정 저장 중 오류가 발생했습니다.");
    } finally {
      setIsLoading(false);
    }
  };

  // Get count by insurance type
  const getCountByInsuranceType = (workers, insuranceType) => {
    if (!workers) return 0;
    return workers.filter((worker) => isEnrolled(worker.worker_id, selectedSite, insuranceType))
      .length;
  };

  // Get manual setting reason
  const getManualReason = (workerId) => {
    const key = `${workerId}-${selectedSite}`;
    return manualSettings[key]?.manual_reason || "";
  };

  // Render helper for insurance status badges
  // Render helper for insurance status badges
  // Render helper for insurance status badges
  // Render helper for insurance status badges
  const renderInsuranceStatusBadge = (workerId, insuranceType) => {
    if (!workerId || !selectedSite) {
      return (
        <span className="px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
          정보 없음
        </span>
      );
    }

    const yearMonth = `${selectedYear}-${selectedMonth}`;

    // 탭에 따라 다른 로직 적용
    if (activeTab === 0) {
      // 신규 대상자 탭 - 원래 로직 유지 (자동 적용/제외, 수동 적용/제외 상태 표시)
      const statusStore = useInsuranceStatusStore.getState();
      const status = statusStore.getEffectiveStatus(
        workerId,
        selectedSite,
        yearMonth,
        insuranceType
      );

      // 스타일 및 텍스트 가져오기
      const styleClasses = statusStore.getStatusStyle(status);
      const statusText = statusStore.getStatusText(status);

      return (
        <span
          className={`px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full ${styleClasses}`}
        >
          {statusText}
        </span>
      );
    } else {
      // 유지 중인 근로자 및 상실 대상자 탭 - 실제 가입 상태 표시
      const enrolled = isEnrolled(workerId, selectedSite, insuranceType);

      // 상실 탭에서 "상실 필요" 상태 표시
      if (activeTab === 2 && enrolled) {
        return (
          <span className="px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
            상실 필요
          </span>
        );
      }

      return (
        <span
          className={`px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full ${
            enrolled ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800"
          }`}
        >
          {enrolled ? "가입" : "미가입"}
        </span>
      );
    }
  };

  // Render worker history details
  const renderWorkerHistory = (workHistory, isInactiveTab = false) => (
    <div className="grid grid-cols-2 gap-x-4 gap-y-1">
      <div className="text-sm">
        <span className="text-gray-500">전월 근무: </span>
        <span className="font-medium">{workHistory.previousMonthWorkDays || 0}일</span>
        <span className="text-gray-400"> / </span>
        <span className="font-medium">{workHistory.previousMonthWorkHours || 0}시간</span>
      </div>
      <div className="text-sm">
        <span className="text-gray-500">당월 근무: </span>
        {isInactiveTab ? (
          <>
            <span className="font-medium text-red-500">0일</span>
            <span className="text-gray-400"> / </span>
            <span className="font-medium text-red-500">0시간</span>
          </>
        ) : (
          <>
            <span className="font-medium">{workHistory.currentMonthWorkDays || 0}일</span>
            <span className="text-gray-400"> / </span>
            <span className="font-medium">{workHistory.currentMonthWorkHours || 0}시간</span>
          </>
        )}
      </div>
      <div className="text-sm">
        <span className="text-gray-500">첫 근무일: </span>
        <span className="font-medium">
          {workHistory.firstWorkDate
            ? new Date(workHistory.firstWorkDate).toLocaleDateString()
            : "기록 없음"}
        </span>
      </div>
      <div className="text-sm">
        <span className="text-gray-500">당월 급여: </span>
        {isInactiveTab ? (
          <span className="font-medium text-red-500">0원</span>
        ) : (
          <span className="font-medium">{(workHistory.monthlyWage || 0).toLocaleString()}원</span>
        )}
      </div>
      {isInactiveTab && (
        <div className="text-sm">
          <span className="font-medium w-28 font-medium">당월 미등록:</span>
          <span className="text-red-500 font-medium">상실 대상</span>
        </div>
      )}
    </div>
  );

  // Render worker profile section
  const renderWorkerProfile = (worker) => (
    <div className="flex items-center">
      <div className="flex-shrink-0 h-10 w-10 bg-gray-200 rounded-full flex items-center justify-center">
        <span className="text-gray-600 font-medium">
          {worker.name ? worker.name.charAt(0) : "?"}
        </span>
      </div>
      <div className="ml-4">
        <div className="text-sm font-medium text-gray-900">{worker.name}</div>
        <div className="text-sm text-gray-500">{formatResidentNumber(worker.resident_number)}</div>
        <div className="text-sm text-gray-500 flex items-center mt-1">
          <span className="bg-gray-100 text-gray-600 px-2 py-0.5 rounded text-xs">
            {worker.jobName || "직종 미지정"}
          </span>
          <span className="mx-1">•</span>
          <span>{worker.age || "?"}세</span>
        </div>
      </div>
    </div>
  );

  // Fixed renderEnrollmentRecords function to reflect actual enrollment status
  // 유지주인근로자, 상실대상자의 근로자 클릭해서 아래 탭에 보험가입정보를 보여주는 부분
  // 수정된 renderEnrollmentRecords 함수
  // 최종 수정된 renderEnrollmentRecords 함수
  const renderEnrollmentRecords = (workerId) => {
    // 보험 종류 정의
    const insuranceTypes = [
      { id: "national_pension", name: "국민연금", color: "blue" },
      { id: "health_insurance", name: "건강보험", color: "green" },
      { id: "employment_insurance", name: "고용보험", color: "purple" },
      { id: "industrial_accident", name: "산재보험", color: "orange" },
    ];

    // 가입 상태인 보험만 필터링 (isEnrolled 함수 결과 기반)
    const enrolledInsurances = insuranceTypes.filter((type) =>
      isEnrolled(workerId, selectedSite, type.id)
    );

    if (enrolledInsurances.length === 0) {
      // 가입된 보험이 없는 경우
      return (
        <tr>
          <td colSpan="4" className="px-6 py-10 text-center text-gray-500">
            <div className="flex flex-col items-center">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                className="h-8 w-8 text-gray-300 mb-2"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth="2"
                  d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                />
              </svg>
              가입 정보가 없습니다.
            </div>
          </td>
        </tr>
      );
    }

    // 가입된 보험에 대한 행 생성
    return enrolledInsurances.map((insurance, idx) => (
      <tr key={idx} className="hover:bg-gray-50">
        <td className="px-4 py-3 text-sm">
          <span className="flex items-center">
            <span className={`w-2 h-2 bg-${insurance.color}-500 rounded-full mr-2`}></span>
            {insurance.name}
          </span>
        </td>
        <td className="px-4 py-3 text-sm">{activeTab === 2 ? "상실 대상" : "가입 중"}</td>
        <td className="px-4 py-3 text-sm">{activeTab === 2 ? "근로관계 종료" : "자동 가입"}</td>
        <td className="px-4 py-3 text-sm">
          {activeTab === 2 ? (
            <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
              상실 필요
            </span>
          ) : (
            <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
              가입 중
            </span>
          )}
        </td>
      </tr>
    ));
  };

  // Render insurance status controls for new enrollment tab
  // 보험 상태 컨트롤 렌더링 함수
  // Render insurance status controls for all insurance types
  // Render insurance status controls for new enrollment tab
  const renderInsuranceControls = (worker) => {
    const yearMonth = `${selectedYear}-${selectedMonth}`;

    // 각 보험 유형별 현재 상태 가져오기
    const statusStore = useInsuranceStatusStore.getState();
    const npStatus =
      statusStore.getEffectiveStatus(
        worker.worker_id,
        selectedSite,
        yearMonth,
        "national_pension"
      ) || {}; // 빈 객체 기본값 추가

    const hiStatus =
      statusStore.getEffectiveStatus(
        worker.worker_id,
        selectedSite,
        yearMonth,
        "health_insurance"
      ) || {}; // 빈 객체 기본값 추가

    const eiStatus =
      statusStore.getEffectiveStatus(
        worker.worker_id,
        selectedSite,
        yearMonth,
        "employment_insurance"
      ) || {}; // 빈 객체 기본값 추가

    const iaStatus =
      statusStore.getEffectiveStatus(
        worker.worker_id,
        selectedSite,
        yearMonth,
        "industrial_accident"
      ) || {}; // 빈 객체 기본값 추가

    return (
      <div className="grid grid-cols-4 md:grid-cols-4 gap-4">
        {/* 국민연금 */}
        <div className="border rounded-lg p-4 bg-white">
          <h5 className="font-medium mb-2">국민연금</h5>
          <div className="space-y-2 mb-4">
            <p className="text-sm">
              <span className="font-medium">현재 상태:</span>{" "}
              {renderInsuranceStatusBadge(worker.worker_id, "national_pension")}
            </p>
            <p className="text-sm">
              <span className="font-medium">사유:</span> {npStatus?.reason || "자동 판단"}
            </p>
          </div>
          <div className="flex space-x-2">
            <button
              onClick={(e) =>
                handleStatusChange(worker.worker_id, "national_pension", "manual_required", e)
              }
              className={`px-2 py-1 text-xs rounded ${
                npStatus?.statusCode === "manual_required"
                  ? "bg-blue-500 text-white"
                  : "bg-gray-200 text-gray-700 hover:bg-blue-100"
              }`}
            >
              수동 적용
            </button>
            <button
              onClick={(e) =>
                handleStatusChange(worker.worker_id, "national_pension", "manual_exempted", e)
              }
              className={`px-2 py-1 text-xs rounded ${
                npStatus?.statusCode === "manual_exempted"
                  ? "bg-blue-500 text-white"
                  : "bg-gray-200 text-gray-700 hover:bg-blue-100"
              }`}
            >
              수동 제외
            </button>
            {/* <button
              onClick={(e) =>
                handleStatusChange(worker.worker_id, "national_pension", "auto_required", e)
              }
              className={`px-2 py-1 text-xs rounded ${
                npStatus?.statusCode?.startsWith("auto_")
                  ? "bg-blue-500 text-white"
                  : "bg-gray-200 text-gray-700 hover:bg-blue-100"
              }`}
            >
              자동 설정
            </button> */}
          </div>
        </div>

        {/* 건강보험 */}
        <div className="border rounded-lg p-4 bg-white">
          <h5 className="font-medium mb-2">건강보험</h5>
          <div className="space-y-2 mb-4">
            <p className="text-sm">
              <span className="font-medium">현재 상태:</span>{" "}
              {renderInsuranceStatusBadge(worker.worker_id, "health_insurance")}
            </p>
            <p className="text-sm">
              <span className="font-medium">사유:</span> {hiStatus?.reason || "자동 판단"}
            </p>
          </div>
          <div className="flex space-x-2">
            <button
              onClick={(e) =>
                handleStatusChange(worker.worker_id, "health_insurance", "manual_required", e)
              }
              className={`px-2 py-1 text-xs rounded ${
                hiStatus?.statusCode === "manual_required"
                  ? "bg-blue-500 text-white"
                  : "bg-gray-200 text-gray-700 hover:bg-blue-100"
              }`}
            >
              수동 적용
            </button>
            <button
              onClick={(e) =>
                handleStatusChange(worker.worker_id, "health_insurance", "manual_exempted", e)
              }
              className={`px-2 py-1 text-xs rounded ${
                hiStatus?.statusCode === "manual_exempted"
                  ? "bg-blue-500 text-white"
                  : "bg-gray-200 text-gray-700 hover:bg-blue-100"
              }`}
            >
              수동 제외
            </button>
            {/* <button
              onClick={(e) =>
                handleStatusChange(worker.worker_id, "health_insurance", "auto_required", e)
              }
              className={`px-2 py-1 text-xs rounded ${
                hiStatus?.statusCode?.startsWith("auto_")
                  ? "bg-blue-500 text-white"
                  : "bg-gray-200 text-gray-700 hover:bg-blue-100"
              }`}
            >
              자동 설정
            </button> */}
          </div>
        </div>

        {/* 고용보험 */}
        <div className="border rounded-lg p-4 bg-white">
          <h5 className="font-medium mb-2">고용보험</h5>
          <div className="space-y-2 mb-4">
            <p className="text-sm">
              <span className="font-medium">현재 상태:</span>{" "}
              {renderInsuranceStatusBadge(worker.worker_id, "employment_insurance")}
            </p>
            <p className="text-sm">
              <span className="font-medium">사유:</span>{" "}
              {eiStatus?.reason || "일용근로자는 근로일수 상관없이 적용"}
            </p>
          </div>
          <div className="flex space-x-2">
            <button
              onClick={(e) =>
                handleStatusChange(worker.worker_id, "employment_insurance", "manual_required", e)
              }
              className={`px-2 py-1 text-xs rounded ${
                eiStatus?.statusCode === "manual_required"
                  ? "bg-blue-500 text-white"
                  : "bg-gray-200 text-gray-700 hover:bg-blue-100"
              }`}
            >
              수동 적용
            </button>
            <button
              onClick={(e) =>
                handleStatusChange(worker.worker_id, "employment_insurance", "manual_exempted", e)
              }
              className={`px-2 py-1 text-xs rounded ${
                eiStatus?.statusCode === "manual_exempted"
                  ? "bg-blue-500 text-white"
                  : "bg-gray-200 text-gray-700 hover:bg-blue-100"
              }`}
            >
              수동 제외
            </button>
            {/* <button
              onClick={(e) =>
                handleStatusChange(worker.worker_id, "employment_insurance", "auto_required", e)
              }
              className={`px-2 py-1 text-xs rounded ${
                eiStatus?.statusCode?.startsWith("auto_")
                  ? "bg-blue-500 text-white"
                  : "bg-gray-200 text-gray-700 hover:bg-blue-100"
              }`}
            >
              자동 설정
            </button> */}
          </div>
        </div>

        {/* 산재보험 */}
        <div className="border rounded-lg p-4 bg-white">
          <h5 className="font-medium mb-2">산재보험</h5>
          <div className="space-y-2 mb-4">
            <p className="text-sm">
              <span className="font-medium">현재 상태:</span>{" "}
              {renderInsuranceStatusBadge(worker.worker_id, "industrial_accident")}
            </p>
            <p className="text-sm">
              <span className="font-medium">사유:</span>{" "}
              {iaStatus?.reason || "모든 근로자 당연 적용"}
            </p>
          </div>
          <div className="flex space-x-2">
            <button
              className="px-2 py-1 text-xs rounded bg-blue-500 text-white cursor-not-allowed"
              disabled
            >
              항상 적용
            </button>
          </div>
        </div>
      </div>
    );
  };

  // Render worker basic info for detail panel
  const renderWorkerDetailInfo = (worker) => (
    <div className="bg-white p-4 rounded-lg shadow-sm">
      <h4 className="text-md font-semibold text-blue-700 mb-3 pb-2 border-b">근로자 정보</h4>
      <div className="space-y-3 text-sm">
        <div className="flex">
          <span className="font-medium w-28">이름:</span>
          <span>{worker.name}</span>
        </div>
        <div className="flex">
          <span className="font-medium w-28">주민등록번호:</span>
          <span>{formatResidentNumber(worker.resident_number)}</span>
        </div>
        <div className="flex">
          <span className="font-medium w-28">연락처:</span>
          <span>{formatPhoneNumber(worker.contact_number)}</span>
        </div>
        <div className="flex">
          <span className="font-medium w-28">나이:</span>
          <span>{worker.age}세</span>
        </div>
        <div className="flex">
          <span className="font-medium w-28">직종:</span>
          <span>{worker.jobName || "미지정"}</span>
        </div>
      </div>
    </div>
  );

  // Render work history detail for detail panel
  const renderWorkHistoryDetail = (workHistory, isInactiveTab = false) => (
    <div className="bg-white p-4 rounded-lg shadow-sm">
      <h4 className="text-md font-semibold text-blue-700 mb-3 pb-2 border-b">근무 이력</h4>
      <div className="space-y-3 text-sm">
        <div className="flex">
          <span className="font-medium w-28">첫 근무일:</span>
          <span>
            {workHistory.firstWorkDate
              ? new Date(workHistory.firstWorkDate).toLocaleDateString()
              : "없음"}
          </span>
        </div>
        <div className="flex">
          <span className="font-medium w-28">전월 근무일수:</span>
          <span>{workHistory.previousMonthWorkDays || 0}일</span>
        </div>
        <div className="flex">
          <span className="font-medium w-28">전월 근무시간:</span>
          <span>{workHistory.previousMonthWorkHours || 0}시간</span>
        </div>
        <div className="flex">
          <span className="font-medium w-28">당월 근무일수:</span>
          {isInactiveTab ? (
            <span className="text-red-500 font-medium">0일</span>
          ) : (
            <span>{workHistory.currentMonthWorkDays || 0}일</span>
          )}
        </div>
        <div className="flex">
          <span className="font-medium w-28">당월 근무시간:</span>
          {isInactiveTab ? (
            <span className="text-red-500 font-medium">0시간</span>
          ) : (
            <span>{workHistory.currentMonthWorkHours || 0}시간</span>
          )}
        </div>
        <div className="flex">
          <span className="font-medium w-28">당월 급여:</span>
          {isInactiveTab ? (
            <span className="text-red-500 font-medium">0원</span>
          ) : (
            <span>{(workHistory.monthlyWage || 0).toLocaleString()}원</span>
          )}
        </div>
        {isInactiveTab && (
          <div className="flex">
            <span className="font-medium w-28 font-medium">당월 미등록:</span>
            <span className="text-red-500 font-medium">상실 대상</span>
          </div>
        )}
      </div>
    </div>
  );

  return (
    <RoleGuard requiredPermission="EDIT_INSURANCE">
      <div className="space-y-6">
        {/* Loading overlay */}
        {isLoading && (
          <div className="fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-70 z-50">
            <div className="animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-blue-500 mr-3"></div>
            <span className="text-white">처리 중...</span>
          </div>
        )}

        {/* Header section */}
        <div className="bg-white rounded-lg shadow p-6">
          <div className="flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
            <div>
              <h1 className="text-2xl font-bold text-gray-800">4대보험 관리</h1>
              {companyName && <p className="text-sm text-gray-500 mt-1">{companyName}</p>}
            </div>
            <div className="flex flex-col md:flex-row items-start md:items-center gap-3 w-full md:w-auto">
              <select
                className="px-3 py-2 border border-gray-300 rounded-md bg-white shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 w-full md:w-auto"
                value={selectedSite || ""}
                onChange={handleSiteChange}
              >
                <option value="">공사현장 선택</option>
                {sites.map((site) => (
                  <option key={site.site_id} value={site.site_id}>
                    {site.site_name}
                  </option>
                ))}
              </select>

              <input
                type="month"
                className="px-3 py-2 border border-gray-300 rounded-md bg-white shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 w-full md:w-auto"
                value={`${selectedYear}-${selectedMonth}`}
                onChange={handleYearMonthChange}
              />

              <div className="flex ml-auto gap-2">
                <Link
                  href="/daily-report"
                  className="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition shadow-sm flex items-center"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    className="h-4 w-4 mr-2"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth="2"
                      d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                    />
                  </svg>
                  급여명세서
                </Link>
                <button
                  className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition shadow-sm flex items-center"
                  onClick={handleSaveAll}
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    className="h-4 w-4 mr-2"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth="2"
                      d="M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4"
                    />
                  </svg>
                  모든 설정 저장
                </button>
              </div>
            </div>
          </div>
        </div>

        {/* Explanation section */}
        <div className="bg-gradient-to-r from-blue-50 to-blue-100 p-5 rounded-lg shadow-sm border border-blue-200">
          <div className="flex items-start">
            <div className="mr-4 bg-blue-200 p-2 rounded-full">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                className="h-6 w-6 text-blue-700"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth="2"
                  d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                />
              </svg>
            </div>
            <div>
              <h2 className="text-lg font-semibold text-blue-800 mb-2">4대보험 적용 판단 안내</h2>
              <ul className="list-none space-y-1.5 text-sm text-blue-800">
                <li className="flex items-start">
                  <span className="inline-block w-3 h-3 bg-blue-400 rounded-full mt-1.5 mr-2"></span>
                  <span>
                    <strong>국민연금:</strong> 60세 이하 근로자 중 월급여 220만원 이상이거나 월 8일
                    이상 또는 월 60시간 이상 근무한 경우
                  </span>
                </li>
                <li className="flex items-start">
                  <span className="inline-block w-3 h-3 bg-blue-400 rounded-full mt-1.5 mr-2"></span>
                  <span>
                    <strong>건강보험:</strong> 월 60시간 이상 근무한 경우
                  </span>
                </li>
                <li className="flex items-start">
                  <span className="inline-block w-3 h-3 bg-blue-400 rounded-full mt-1.5 mr-2"></span>
                  <span>
                    <strong>고용보험:</strong> 일용근로자는 근로일수 및 시간 상관없이 모두 적용
                    (65세 이상은 특례 적용)
                  </span>
                </li>
                <li className="flex items-start">
                  <span className="inline-block w-3 h-3 bg-blue-400 rounded-full mt-1.5 mr-2"></span>
                  <span>
                    <strong>산재보험:</strong> 모든 근로자 당연 적용
                  </span>
                </li>
              </ul>
              <p className="mt-2 text-sm italic text-blue-700">
                자동 판단 결과를 확인하고, 필요시 수동으로 적용 여부를 조정할 수 있습니다.
              </p>
            </div>
          </div>
        </div>

        {/* Search and statistics */}
        <div className="flex flex-col md:flex-row justify-between items-center gap-4 bg-white p-4 rounded-lg shadow-sm">
          <div className="relative w-full md:w-80">
            <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg
                className="h-5 w-5 text-gray-400"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 20 20"
                fill="currentColor"
              >
                <path
                  fillRule="evenodd"
                  d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
                  clipRule="evenodd"
                />
              </svg>
            </div>
            <input
              type="text"
              className="pl-10 pr-4 py-2 w-full border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="근로자 이름 또는 주민번호 검색..."
              value={searchTerm}
              onChange={handleSearch}
            />
          </div>

          <div className="flex gap-2 flex-wrap justify-center md:justify-end w-full md:w-auto">
            {/* Statistics cards */}
            <div className="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm flex items-center">
              <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
              <span>
                국민연금:{" "}
                {getCountByInsuranceType(
                  [...(activeWorkers || []), ...(inactiveWorkers || [])],
                  "national_pension"
                )}
                명
              </span>
            </div>
            <div className="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm flex items-center">
              <span className="w-2 h-2 bg-blue-500 rounded-full mr-2"></span>
              <span>
                건강보험:{" "}
                {getCountByInsuranceType(
                  [...(activeWorkers || []), ...(inactiveWorkers || [])],
                  "health_insurance"
                )}
                명
              </span>
            </div>
            <div className="bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-sm flex items-center">
              <span className="w-2 h-2 bg-purple-500 rounded-full mr-2"></span>
              <span>
                고용보험:{" "}
                {getCountByInsuranceType(
                  [...(activeWorkers || []), ...(inactiveWorkers || [])],
                  "employment_insurance"
                )}
                명
              </span>
            </div>
            <div className="bg-amber-100 text-amber-800 px-3 py-1 rounded-full text-sm flex items-center">
              <span className="w-2 h-2 bg-amber-500 rounded-full mr-2"></span>
              <span>
                산재보험:{" "}
                {getCountByInsuranceType(
                  [...(activeWorkers || []), ...(inactiveWorkers || [])],
                  "industrial_accident"
                )}
                명
              </span>
            </div>
          </div>
        </div>

        {/* Tab area */}
        <div className="bg-white rounded-lg shadow overflow-hidden">
          {/* Tab header */}
          <div className="flex border-b">
            <button
              className={`py-3 px-6 font-medium text-sm focus:outline-none transition-colors ${
                activeTab === 0
                  ? "border-b-2 border-blue-500 text-blue-600 bg-blue-50"
                  : "text-gray-500 hover:text-gray-700 hover:bg-gray-50"
              }`}
              onClick={() => setActiveTab(0)}
            >
              신규 가입 대상자
              <span className="ml-2 bg-blue-100 text-blue-800 px-2 py-0.5 rounded-full text-xs">
                {registeredWorkers ? registeredWorkers.length : 0}
              </span>
            </button>
            <button
              className={`py-3 px-6 font-medium text-sm focus:outline-none transition-colors ${
                activeTab === 1
                  ? "border-b-2 border-blue-500 text-blue-600 bg-blue-50"
                  : "text-gray-500 hover:text-gray-700 hover:bg-gray-50"
              }`}
              onClick={() => setActiveTab(1)}
            >
              유지 중인 근로자
              <span className="ml-2 bg-green-100 text-green-800 px-2 py-0.5 rounded-full text-xs">
                {activeWorkers ? activeWorkers.length : 0}
              </span>
            </button>
            <button
              className={`py-3 px-6 font-medium text-sm focus:outline-none transition-colors ${
                activeTab === 2
                  ? "border-b-2 border-blue-500 text-blue-600 bg-blue-50"
                  : "text-gray-500 hover:text-gray-700 hover:bg-gray-50"
              }`}
              onClick={() => setActiveTab(2)}
            >
              상실 대상자
              <span className="ml-2 bg-red-100 text-red-800 px-2 py-0.5 rounded-full text-xs">
                {inactiveWorkers ? inactiveWorkers.length : 0}
              </span>
            </button>
          </div>

          {/* Tab content */}
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-12">
                    No.
                  </th>
                  <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    근로자 정보
                  </th>
                  <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    근무 이력
                  </th>
                  <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    4대보험 가입 상태
                  </th>
                  <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-32">
                    액션
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {(() => {
                  // Determine which workers to show based on active tab
                  const workersArray =
                    activeTab === 0
                      ? registeredWorkers
                      : activeTab === 1
                      ? activeWorkers
                      : inactiveWorkers;

                  const filteredWorkers = filterWorkers(workersArray);

                  if (filteredWorkers.length === 0) {
                    return (
                      <tr>
                        <td colSpan="5" className="px-6 py-12 text-center">
                          <div className="flex flex-col items-center">
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              className="h-12 w-12 text-gray-300 mb-4"
                              fill="none"
                              viewBox="0 0 24 24"
                              stroke="currentColor"
                            >
                              <path
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                strokeWidth="2"
                                d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                              />
                            </svg>
                            <span className="text-gray-500 text-lg">
                              {selectedSite
                                ? searchTerm
                                  ? "검색 결과가 없습니다."
                                  : activeTab === 0
                                  ? "신규 가입 대상자가 없습니다."
                                  : activeTab === 1
                                  ? "유지 중인 근로자가 없습니다."
                                  : "상실 대상자가 없습니다."
                                : "공사현장을 선택해주세요."}
                            </span>
                          </div>
                        </td>
                      </tr>
                    );
                  }

                  return filteredWorkers.map((worker, index) => {
                    const yearMonth = `${selectedYear}-${selectedMonth}`;
                    const workHistory =
                      workersHistory[`${worker.worker_id}-${selectedSite}-${yearMonth}`] || {};
                    const isInactiveTab = activeTab === 2;

                    return (
                      <React.Fragment key={worker.worker_id}>
                        <tr
                          className={`${
                            selectedWorkerId === worker.worker_id
                              ? "bg-blue-50"
                              : "hover:bg-gray-50"
                          } cursor-pointer transition-colors`}
                          onClick={() => setSelectedWorkerId(worker.worker_id)}
                        >
                          <td className="px-4 py-4 whitespace-nowrap text-sm text-gray-500">
                            {index + 1}
                          </td>

                          <td className="px-4 py-4">{renderWorkerProfile(worker)}</td>

                          <td className="px-4 py-4">
                            {renderWorkerHistory(workHistory, isInactiveTab)}
                          </td>

                          <td className="px-4 py-4">
                            {activeTab === 0 ? (
                              <div className="grid grid-cols-2 gap-2">
                                <div className="text-sm">
                                  <span className="text-gray-500">국민연금: </span>
                                  {renderInsuranceStatusBadge(worker.worker_id, "national_pension")}
                                </div>
                                <div className="text-sm">
                                  <span className="text-gray-500">건강보험: </span>
                                  {renderInsuranceStatusBadge(worker.worker_id, "health_insurance")}
                                </div>
                                <div className="text-sm">
                                  <span className="text-gray-500">고용보험: </span>
                                  {renderInsuranceStatusBadge(
                                    worker.worker_id,
                                    "employment_insurance"
                                  )}
                                </div>
                                <div className="text-sm">
                                  <span className="text-gray-500">산재보험: </span>
                                  {renderInsuranceStatusBadge(
                                    worker.worker_id,
                                    "industrial_accident"
                                  )}
                                </div>
                              </div>
                            ) : (
                              <div className="grid grid-cols-2 gap-2">
                                <div className="text-sm">
                                  <span className="text-gray-500">국민연금: </span>
                                  <span
                                    className={`px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full ${
                                      isEnrolled(worker.worker_id, selectedSite, "national_pension")
                                        ? isInactiveTab
                                          ? "bg-red-100 text-red-800" // 상실 필요 (가입된 상태)
                                          : "bg-green-100 text-green-800" // 가입 상태
                                        : "bg-red-100 text-red-800" // 미가입 상태 - 빨간색으로 변경
                                    }`}
                                  >
                                    {isInactiveTab
                                      ? isEnrolled(
                                          worker.worker_id,
                                          selectedSite,
                                          "national_pension"
                                        )
                                        ? "상실 필요"
                                        : "미가입"
                                      : isEnrolled(
                                          worker.worker_id,
                                          selectedSite,
                                          "national_pension"
                                        )
                                      ? "가입"
                                      : "미가입"}
                                  </span>
                                </div>
                                <div className="text-sm">
                                  <span className="text-gray-500">건강보험: </span>
                                  <span
                                    className={`px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full ${
                                      isEnrolled(worker.worker_id, selectedSite, "health_insurance")
                                        ? isInactiveTab
                                          ? "bg-red-100 text-red-800" // 상실 필요 (가입된 상태)
                                          : "bg-green-100 text-green-800" // 가입 상태
                                        : "bg-red-100 text-red-800" // 미가입 상태 - 빨간색으로 변경
                                    }`}
                                  >
                                    {isInactiveTab
                                      ? isEnrolled(
                                          worker.worker_id,
                                          selectedSite,
                                          "health_insurance"
                                        )
                                        ? "상실 필요"
                                        : "미가입"
                                      : isEnrolled(
                                          worker.worker_id,
                                          selectedSite,
                                          "health_insurance"
                                        )
                                      ? "가입"
                                      : "미가입"}
                                  </span>
                                </div>
                                <div className="text-sm">
                                  <span className="text-gray-500">고용보험: </span>
                                  <span
                                    className={`px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full ${
                                      isEnrolled(
                                        worker.worker_id,
                                        selectedSite,
                                        "employment_insurance"
                                      )
                                        ? isInactiveTab
                                          ? "bg-red-100 text-red-800" // 상실 필요 (가입된 상태)
                                          : "bg-green-100 text-green-800" // 가입 상태
                                        : "bg-red-100 text-red-800" // 미가입 상태 - 빨간색으로 변경
                                    }`}
                                  >
                                    {isInactiveTab
                                      ? isEnrolled(
                                          worker.worker_id,
                                          selectedSite,
                                          "employment_insurance"
                                        )
                                        ? "상실 필요"
                                        : "미가입"
                                      : isEnrolled(
                                          worker.worker_id,
                                          selectedSite,
                                          "employment_insurance"
                                        )
                                      ? "가입"
                                      : "미가입"}
                                  </span>
                                </div>
                                <div className="text-sm">
                                  <span className="text-gray-500">산재보험: </span>
                                  <span
                                    className={`px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full ${
                                      isEnrolled(
                                        worker.worker_id,
                                        selectedSite,
                                        "industrial_accident"
                                      )
                                        ? isInactiveTab
                                          ? "bg-red-100 text-red-800" // 상실 필요 (가입된 상태)
                                          : "bg-green-100 text-green-800" // 가입 상태
                                        : "bg-red-100 text-red-800" // 미가입 상태 - 빨간색으로 변경
                                    }`}
                                  >
                                    {isInactiveTab
                                      ? isEnrolled(
                                          worker.worker_id,
                                          selectedSite,
                                          "industrial_accident"
                                        )
                                        ? "상실 필요"
                                        : "미가입"
                                      : isEnrolled(
                                          worker.worker_id,
                                          selectedSite,
                                          "industrial_accident"
                                        )
                                      ? "가입"
                                      : "미가입"}
                                  </span>
                                </div>
                              </div>
                            )}
                          </td>

                          <td className="px-4 py-4 whitespace-nowrap text-right text-sm font-medium">
                            {activeTab === 0 ? (
                              <button
                                onClick={(e) => handleAcquisition(worker.worker_id, e)}
                                className="inline-flex items-center px-3 py-1.5 bg-blue-600 text-white text-xs font-medium rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition"
                              >
                                <svg
                                  xmlns="http://www.w3.org/2000/svg"
                                  className="h-4 w-4 mr-1"
                                  fill="none"
                                  viewBox="0 0 24 24"
                                  stroke="currentColor"
                                >
                                  <path
                                    strokeLinecap="round"
                                    strokeLinejoin="round"
                                    strokeWidth="2"
                                    d="M12 6v6m0 0v6m0-6h6m-6 0H6"
                                  />
                                </svg>
                                가입 처리
                              </button>
                            ) : (
                              <button
                                onClick={(e) => handleLoss(worker.worker_id, e)}
                                className="inline-flex items-center px-3 py-1.5 bg-red-600 text-white text-xs font-medium rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition"
                              >
                                <svg
                                  xmlns="http://www.w3.org/2000/svg"
                                  className="h-4 w-4 mr-1"
                                  fill="none"
                                  viewBox="0 0 24 24"
                                  stroke="currentColor"
                                >
                                  <path
                                    strokeLinecap="round"
                                    strokeLinejoin="round"
                                    strokeWidth="2"
                                    d="M6 18L18 6M6 6l12 12"
                                  />
                                </svg>
                                상실 처리
                              </button>
                            )}
                          </td>
                        </tr>

                        {/* Detail panel */}
                        {selectedWorkerId === worker.worker_id && showDetail && (
                          <tr>
                            <td colSpan="5" className="p-0">
                              <div className="border-t border-b border-blue-200 bg-blue-50 p-6">
                                <div className="flex justify-between items-start mb-4">
                                  <h3 className="text-lg font-semibold text-blue-800">
                                    {worker.name} - 4대보험 세부 정보
                                  </h3>
                                  <button
                                    onClick={() => setSelectedWorkerId(null)}
                                    className="text-gray-400 hover:text-gray-600"
                                  >
                                    <svg
                                      xmlns="http://www.w3.org/2000/svg"
                                      className="h-6 w-6"
                                      fill="none"
                                      viewBox="0 0 24 24"
                                      stroke="currentColor"
                                    >
                                      <path
                                        strokeLinecap="round"
                                        strokeLinejoin="round"
                                        strokeWidth="2"
                                        d="M6 18L18 6M6 6l12 12"
                                      />
                                    </svg>
                                  </button>
                                </div>

                                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                                  {/* 근로자 정보 */}
                                  {renderWorkerDetailInfo(worker)}

                                  {/* 근무 이력 정보 */}
                                  {renderWorkHistoryDetail(workHistory, isInactiveTab)}
                                </div>

                                <div className="mt-6">
                                  <h4 className="text-md font-semibold text-blue-700 mb-3 pb-2 border-b">
                                    4대보험 가입 정보
                                  </h4>
                                  <div className="bg-white border rounded-lg shadow-sm">
                                    <table className="min-w-full divide-y divide-gray-200">
                                      <thead className="bg-gray-50">
                                        <tr>
                                          <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                            보험 종류
                                          </th>
                                          <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                            가입일
                                          </th>
                                          <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                            가입사유
                                          </th>
                                          <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                            상태
                                          </th>
                                        </tr>
                                      </thead>
                                      <tbody className="divide-y divide-gray-200">
                                        {renderEnrollmentRecords(worker.worker_id)}
                                      </tbody>
                                    </table>
                                  </div>

                                  {/* 상실 탭인 경우 주의 메시지 표시 */}
                                  {isInactiveTab && (
                                    <div className="mt-4 bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                                      <div className="flex items-start">
                                        <svg
                                          xmlns="http://www.w3.org/2000/svg"
                                          className="h-5 w-5 text-yellow-500 mr-2 mt-0.5"
                                          fill="none"
                                          viewBox="0 0 24 24"
                                          stroke="currentColor"
                                        >
                                          <path
                                            strokeLinecap="round"
                                            strokeLinejoin="round"
                                            strokeWidth="2"
                                            d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"
                                          />
                                        </svg>
                                        <div>
                                          <p className="text-yellow-800 font-medium mb-1">
                                            주의: 당월 근무 기록이 없는 근로자입니다
                                          </p>
                                          <p className="text-yellow-700 text-sm">
                                            실제로 현장에 더 이상 출근하지 않는 경우 상실 처리가
                                            필요합니다. 상실일이 속한 달의 전월까지 보험료가
                                            부과되므로, 가능한 빨리 상실 처리하는 것이 좋습니다.
                                          </p>
                                        </div>
                                      </div>
                                    </div>
                                  )}

                                  {/* 유지 탭인 경우 주의 메시지 표시 */}
                                  {activeTab === 1 && (
                                    <div className="mt-4 bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                                      <div className="flex items-start">
                                        <svg
                                          xmlns="http://www.w3.org/2000/svg"
                                          className="h-5 w-5 text-yellow-500 mr-2 mt-0.5"
                                          fill="none"
                                          viewBox="0 0 24 24"
                                          stroke="currentColor"
                                        >
                                          <path
                                            strokeLinecap="round"
                                            strokeLinejoin="round"
                                            strokeWidth="2"
                                            d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"
                                          />
                                        </svg>
                                        <div>
                                          <p className="text-yellow-800 font-medium mb-1">
                                            주의: 고용 관계 변동 사항
                                          </p>
                                          <p className="text-yellow-700 text-sm">
                                            근로자가 현장에 더 이상 출근하지 않는 경우 상실 처리가
                                            필요합니다. 그렇지 않으면 계속해서 보험료가 부과됩니다.
                                          </p>
                                        </div>
                                      </div>
                                    </div>
                                  )}

                                  {/* 신규 가입 탭에서만 설정 UI 표시 */}
                                  {activeTab === 0 && (
                                    <>
                                      <div className="mt-6">
                                        <h4 className="text-md font-semibold text-blue-700 mb-3 pb-2 border-b">
                                          4대보험 설정
                                        </h4>
                                        {renderInsuranceControls(worker)}
                                      </div>

                                      {/* 사유 입력 */}
                                      <div className="mt-6">
                                        <h4 className="text-md font-semibold text-blue-700 mb-2">
                                          수동 설정 사유
                                        </h4>
                                        <div className="flex items-start space-x-2">
                                          <textarea
                                            className="flex-1 p-2 border rounded"
                                            rows="2"
                                            placeholder="수동 설정 사유를 입력하세요"
                                            value={getManualReason(worker.worker_id)}
                                            onChange={(e) => {
                                              const updatedSettings = { ...manualSettings };
                                              const key = `${worker.worker_id}-${selectedSite}`;
                                              if (!updatedSettings[key]) {
                                                updatedSettings[key] = {
                                                  manual_reason: e.target.value,
                                                };
                                              } else {
                                                updatedSettings[key].manual_reason = e.target.value;
                                              }
                                            }}
                                          ></textarea>
                                          <button
                                            className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
                                            onClick={(e) => {
                                              e.stopPropagation();
                                              handleReason(
                                                worker.worker_id,
                                                getManualReason(worker.worker_id),
                                                e
                                              );
                                            }}
                                          >
                                            저장
                                          </button>
                                        </div>
                                      </div>
                                    </>
                                  )}
                                </div>
                              </div>
                            </td>
                          </tr>
                        )}
                      </React.Fragment>
                    );
                  });
                })()}
              </tbody>
            </table>
          </div>
        </div>

        {/* Footer/Action buttons */}
        <div className="flex justify-end space-x-4 mt-6">
          <Link
            href="/daily-report"
            className="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition shadow-sm flex items-center"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              className="h-4 w-4 mr-2"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
              />
            </svg>
            급여명세서
          </Link>
          <button
            className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition shadow-sm flex items-center"
            onClick={handleSaveAll}
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              className="h-4 w-4 mr-2"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                d="M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4"
              />
            </svg>
            모든 설정 저장
          </button>
        </div>

        {/* Toast container */}
        <ToastContainer />
      </div>
    </RoleGuard>
  );
}

export default InsuranceEnrollmentsPage;
/************
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */

// //file: app/dashboard/insurance/insurance-enrollments/page.js

// "use client";
// import React, { useEffect, useState } from "react";
// import { supabase } from "@/lib/supabase";
// import { useAuthStore } from "@/lib/store/authStore";
// import RoleGuard from "@/components/RoleGuard";
// import { ToastContainer, toast } from "react-toastify";
// import { formatResidentNumber, formatPhoneNumber } from "@/lib/utils/formattingUtils";
// import Link from "next/link";

// // Import all necessary stores directly
// import useSiteStore from "@/lib/store/siteStore";
// import useWorkerStore from "@/lib/store/workerStore";
// import useWorkHistoryStore from "@/lib/store/workHistoryStore";
// import useInsuranceStatusStore from "@/lib/store/insuranceStatusStore";
// import useInsuranceEnrollmentStore from "@/lib/store/insuranceEnrollmentStore";
// import useInsuranceStore from "@/lib/store/useInsuranceStore";

// function InsuranceEnrollmentsPage() {
//   const { user } = useAuthStore();
//   const [searchTerm, setSearchTerm] = useState("");
//   const [activeTab, setActiveTab] = useState(0);
//   const [selectedYear, setSelectedYear] = useState(new Date().getFullYear().toString());
//   const [selectedMonth, setSelectedMonth] = useState(
//     (new Date().getMonth() + 1).toString().padStart(2, "0")
//   );
//   const [isLoading, setIsLoading] = useState(false);

//   // Get state from site store
//   const { sites, selectedSite, setSelectedSite, companyName } = useSiteStore();

//   // Get state from worker store
//   const {
//     registeredWorkers,
//     activeWorkers,
//     inactiveWorkers,
//     selectedWorkerId,
//     showDetail,
//     setSelectedWorkerId,
//     loadWorkers,
//   } = useWorkerStore();

//   // Get state from work history store
//   const { workersHistory } = useWorkHistoryStore();

//   // Get state from insurance status store
//   const { manualSettings, getStatusStyle, getStatusText, getEffectiveStatus } =
//     useInsuranceStatusStore();

//   // Get state from insurance enrollment store
//   const {
//     isEnrolled,
//     enrollmentRecords,
//     handleInsuranceAcquisition,
//     handleInsuranceLoss,
//     loadInsuranceEnrollments,
//   } = useInsuranceEnrollmentStore();

//   // Handle insurance operations from insurance store
//   const { handleInsuranceStatusChange, handleReasonUpdate, initialize } = useInsuranceStore();

//   // Initialize stores when component mounts
//   useEffect(() => {
//     if (user) {
//       setIsLoading(true);
//       initialize(user.id).then(() => {
//         setIsLoading(false);
//       });
//     }
//   }, [user, initialize]);

//   // Load workers when site or year/month changes
//   useEffect(() => {
//     if (selectedSite) {
//       const yearMonth = `${selectedYear}-${selectedMonth}`;
//       loadWorkers(selectedSite, yearMonth);
//     }
//   }, [selectedSite, selectedYear, selectedMonth, loadWorkers]);

//   // 근로자 목록이 변경될 때마다 모든 근로자의 이력 데이터 로드
//   useEffect(() => {
//     if (selectedSite && selectedYear && selectedMonth) {
//       const yearMonth = `${selectedYear}-${selectedMonth}`;
//       const allWorkers = [
//         ...(registeredWorkers || []),
//         ...(activeWorkers || []),
//         ...(inactiveWorkers || []),
//       ];

//       // 중복 제거 (worker_id 기준)
//       const uniqueWorkers = Array.from(
//         new Map(allWorkers.map((worker) => [worker.worker_id, worker])).values()
//       );

//       if (uniqueWorkers.length > 0) {
//         setIsLoading(true);

//         // 병렬로 모든 근로자의 이력 로드
//         const loadAllHistories = async () => {
//           try {
//             await Promise.all(
//               uniqueWorkers.map((worker) =>
//                 useWorkHistoryStore
//                   .getState()
//                   .loadWorkersHistory(worker.worker_id, selectedSite, yearMonth)
//               )
//             );
//           } catch (error) {
//             console.error("근로자 이력 로드 오류:", error);
//           } finally {
//             setIsLoading(false);
//           }
//         };

//         loadAllHistories();
//       }
//     }
//   }, [
//     registeredWorkers,
//     activeWorkers,
//     inactiveWorkers,
//     selectedSite,
//     selectedYear,
//     selectedMonth,
//   ]);

//   // Load enrollment records for selected worker
//   useEffect(() => {
//     if (selectedWorkerId && selectedSite && selectedYear && selectedMonth) {
//       setIsLoading(true);
//       const yearMonth = `${selectedYear}-${selectedMonth}`;

//       // async/await 패턴으로 데이터 로딩 완료를 기다림
//       const loadData = async () => {
//         try {
//           await useWorkHistoryStore
//             .getState()
//             .loadWorkersHistory(selectedWorkerId, selectedSite, yearMonth);
//         } catch (error) {
//           console.error("근로자 이력 로드 오류:", error);
//         } finally {
//           setIsLoading(false);
//         }
//       };

//       loadData();
//     }
//   }, [selectedWorkerId, selectedSite, selectedYear, selectedMonth]);

//   // Handle site selection change
//   const handleSiteChange = (e) => {
//     setSelectedSite(e.target.value);
//   };

//   // Handle year and month change
//   const handleYearMonthChange = (e) => {
//     const [year, month] = e.target.value.split("-");
//     setSelectedYear(year);
//     setSelectedMonth(month);
//   };

//   // Handle search
//   const handleSearch = (e) => {
//     setSearchTerm(e.target.value);
//   };

//   // Filter workers based on search term
//   const filterWorkers = (workers) => {
//     if (!searchTerm || !workers) return workers || [];
//     return workers.filter(
//       (worker) =>
//         worker.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
//         worker.resident_number.includes(searchTerm)
//     );
//   };

//   // Handle acquisition with toast feedback
//   const handleAcquisition = async (workerId, e) => {
//     if (e) {
//       e.stopPropagation();
//     }
//     setIsLoading(true);
//     try {
//       const yearMonth = `${selectedYear}-${selectedMonth}`;
//       const result = await handleInsuranceAcquisition(workerId, selectedSite, yearMonth, [
//         "national_pension",
//         "health_insurance",
//         "employment_insurance",
//         "industrial_accident",
//       ]);

//       if (result.success) {
//         toast.success(result.message);
//       } else {
//         toast.error(result.message);
//       }
//     } catch (error) {
//       toast.error(`Failed: ${error.message}`);
//     } finally {
//       setIsLoading(false);
//     }
//   };

//   // Handle loss with toast feedback
//   const handleLoss = async (workerId, e) => {
//     if (e) {
//       e.stopPropagation();
//     }
//     setIsLoading(true);
//     try {
//       const result = await handleInsuranceLoss(workerId, selectedSite);

//       if (result.success) {
//         toast.success(result.message);
//       } else {
//         toast.error(result.message);
//       }
//     } catch (error) {
//       toast.error(`Failed: ${error.message}`);
//     } finally {
//       setIsLoading(false);
//     }
//   };

//   // Handle status change with toast feedback
//   // 보험 상태 변경 처리 함수 (UI 상태만 업데이트)
//   const handleStatusChange = async (workerId, insuranceType, newStatus, e) => {
//     if (e) {
//       e.stopPropagation();
//     }

//     try {
//       // 로컬 상태만 업데이트
//       useInsuranceStatusStore
//         .getState()
//         .updateManualStatus(workerId, selectedSite, insuranceType, newStatus);

//       return {
//         success: true,
//         message: `${insuranceType} 상태가 변경되었습니다. 저장 버튼을 클릭하여 변경사항을 저장하세요.`,
//       };
//     } catch (error) {
//       console.error(`상태 변경 중 오류 발생:`, error);
//       return { success: false, message: `상태 변경 중 오류: ${error.message}` };
//     }
//   };

//   // Handle reason update with toast feedback
//   // Manual Reason 업데이트 (UI 상태만 업데이트)
//   const handleReason = async (workerId, reason, e) => {
//     if (e) {
//       e.stopPropagation();
//     }

//     try {
//       // 로컬 상태만 업데이트
//       useInsuranceStatusStore.getState().updateManualReason(workerId, selectedSite, reason);

//       return {
//         success: true,
//         message: "사유가 변경되었습니다. 저장 버튼을 클릭하여 변경사항을 저장하세요.",
//       };
//     } catch (error) {
//       console.error(`사유 업데이트 중 오류 발생:`, error);
//       return { success: false, message: `사유 업데이트 중 오류: ${error.message}` };
//     }
//   };

//   // Handle saving all settings
//   // 모든 설정 저장 처리 함수
//   const handleSaveAll = async () => {
//     try {
//       setIsLoading(true);
//       toast.info("설정 저장 중...", { autoClose: false, toastId: "saving" });

//       // 현재 년/월
//       const yearMonth = `${selectedYear}-${selectedMonth}`;

//       // 모든 수동 설정 및 근무 기록 데이터 가져오기
//       const allManualSettings = useInsuranceStatusStore.getState().manualSettings;
//       const workerHistoryData = useWorkHistoryStore.getState().workersHistory;

//       // 모든 근로자 ID 목록 생성
//       const allWorkerIds = [
//         ...(registeredWorkers || []).map((w) => w.worker_id),
//         ...(activeWorkers || []).map((w) => w.worker_id),
//         ...(inactiveWorkers || []).map((w) => w.worker_id),
//       ].filter((id, index, self) => self.indexOf(id) === index);

//       if (allWorkerIds.length === 0) {
//         toast.info("저장할 근로자가 없습니다.");
//         toast.dismiss("saving");
//         setIsLoading(false);
//         return;
//       }

//       // 결과 추적
//       let successCount = 0;
//       let errorCount = 0;

//       // 각 근로자 처리
//       for (const workerId of allWorkerIds) {
//         try {
//           // 캐시 키 생성
//           const cacheKey = `${workerId}-${selectedSite}`;

//           // 현재 상태 가져오기
//           const manualSetting = allManualSettings[cacheKey];
//           const insuranceStatus = useInsuranceStatusStore.getState().insuranceStatus[cacheKey] || {
//             nationalPension: { required: false },
//             healthInsurance: { required: false },
//             employmentInsurance: { required: true },
//             industrialAccident: { required: true },
//           };

//           // 근무 이력 가져오기
//           const workerHistory = workerHistoryData[cacheKey] || {};

//           // 저장할 설정 준비
//           const settingsToSave = {
//             worker_id: parseInt(workerId),
//             site_id: selectedSite,
//             year_month: yearMonth,

//             // 보험 상태 필드
//             national_pension_status: manualSetting
//               ? manualSetting.national_pension_status || "auto_exempted"
//               : insuranceStatus.nationalPension?.required
//               ? "auto_required"
//               : "auto_exempted",

//             health_insurance_status: manualSetting
//               ? manualSetting.health_insurance_status || "auto_exempted"
//               : insuranceStatus.healthInsurance?.required
//               ? "auto_required"
//               : "auto_exempted",

//             employment_insurance_status: manualSetting
//               ? manualSetting.employment_insurance_status || "auto_required"
//               : insuranceStatus.employmentInsurance?.required
//               ? "auto_required"
//               : "auto_exempted",

//             industrial_accident_status: manualSetting
//               ? manualSetting.industrial_accident_status || "auto_required"
//               : "auto_required",

//             // 근무 정보 필드
//             first_work_date: workerHistory.firstWorkDate || null,
//             previous_month_work_days: workerHistory.previousMonthWorkDays || 0,
//             previous_month_work_hours: workerHistory.previousMonthWorkHours || 0,
//             current_month_work_days: workerHistory.currentMonthWorkDays || 0,
//             current_month_work_hours: workerHistory.currentMonthWorkHours || 0,

//             // 사용자 확정 정보
//             manual_reason: manualSetting ? manualSetting.manual_reason || "" : "",
//             enrollment_status: "confirmed", // 사용자 확정 상태로 변경
//             user_confirmed: true, // 사용자 확정 표시
//             user_confirmed_at: new Date().toISOString(), // 확정 시간 기록
//             confirmed_by: user?.id || null, // 확정한 사용자 ID

//             // 시스템 필드
//             updated_at: new Date().toISOString(),
//           };

//           // 기존 레코드 확인
//           const { data: existingRecord, error: checkError } = await supabase
//             .from("insurance_enrollments")
//             .select("enrollment_id")
//             .eq("worker_id", settingsToSave.worker_id)
//             .eq("site_id", settingsToSave.site_id)
//             .eq("year_month", settingsToSave.year_month)
//             .maybeSingle();

//           if (checkError && checkError.code !== "PGRST116") {
//             console.error(`레코드 확인 오류:`, checkError);
//             errorCount++;
//             continue;
//           }

//           let result;
//           if (existingRecord) {
//             // 기존 레코드 업데이트
//             result = await supabase
//               .from("insurance_enrollments")
//               .update(settingsToSave)
//               .eq("enrollment_id", existingRecord.enrollment_id);
//           } else {
//             // 새 레코드 추가
//             const insertData = {
//               ...settingsToSave,
//               created_at: new Date().toISOString(),
//             };
//             result = await supabase.from("insurance_enrollments").insert(insertData);
//           }

//           if (result.error) {
//             console.error(`근로자 ID ${workerId} 설정 저장 오류:`, result.error);
//             errorCount++;
//           } else {
//             successCount++;
//           }
//         } catch (error) {
//           console.error(`근로자 ID ${workerId} 설정 저장 중 예외 발생:`, error);
//           errorCount++;
//         }
//       }

//       // 토스트 닫기
//       toast.dismiss("saving");

//       // 결과 표시
//       if (errorCount === 0) {
//         toast.success(`${successCount}개의 설정이 저장되었습니다.`);
//       } else if (successCount === 0) {
//         toast.error(`저장 실패: ${errorCount}개의 오류가 발생했습니다.`);
//       } else {
//         toast.warning(`${successCount}개 저장 성공, ${errorCount}개 저장 실패`);
//       }

//       // 데이터 다시 로드
//       const yearMonthStr = `${selectedYear}-${selectedMonth}`;
//       loadWorkers(selectedSite, yearMonthStr);

//       // 오류 초기화
//       useInsuranceStatusStore.getState().clearError();
//     } catch (error) {
//       console.error("설정 저장 오류:", error);
//       toast.error("설정 저장 중 오류가 발생했습니다.");
//     } finally {
//       setIsLoading(false);
//     }
//   };

//   // Get count by insurance type
//   const getCountByInsuranceType = (workers, insuranceType) => {
//     if (!workers) return 0;
//     return workers.filter((worker) => isEnrolled(worker.worker_id, selectedSite, insuranceType))
//       .length;
//   };

//   // Determine which workers to show based on active tab
//   const getWorkersForActiveTab = () => {
//     switch (activeTab) {
//       case 0: // New enrollment candidates
//         return registeredWorkers || [];
//       case 1: // Active enrolled workers
//         return activeWorkers || [];
//       case 2: // Loss candidates
//         return inactiveWorkers || [];
//       default:
//         return [];
//     }
//   };

//   // Get manual setting reason
//   const getManualReason = (workerId) => {
//     const key = `${workerId}-${selectedSite}`;
//     return manualSettings[key]?.manual_reason || "";
//   };

//   return (
//     <RoleGuard requiredPermission="EDIT_INSURANCE">
//       <div className="space-y-6">
//         {/* Loading overlay */}
//         {isLoading && (
//           <div className="fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-70 z-50">
//             <div className="animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-blue-500 mr-3"></div>
//             <span className="text-white">처리 중...</span>
//           </div>
//         )}

//         {/* Header section */}
//         <div className="bg-white rounded-lg shadow p-6">
//           <div className="flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
//             <div>
//               <h1 className="text-2xl font-bold text-gray-800">4대보험 관리</h1>
//               {companyName && <p className="text-sm text-gray-500 mt-1">{companyName}</p>}
//             </div>
//             <div className="flex flex-col md:flex-row items-start md:items-center gap-3 w-full md:w-auto">
//               <select
//                 className="px-3 py-2 border border-gray-300 rounded-md bg-white shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 w-full md:w-auto"
//                 value={selectedSite || ""}
//                 onChange={handleSiteChange}
//               >
//                 <option value="">공사현장 선택</option>
//                 {sites.map((site) => (
//                   <option key={site.site_id} value={site.site_id}>
//                     {site.site_name}
//                   </option>
//                 ))}
//               </select>

//               <input
//                 type="month"
//                 className="px-3 py-2 border border-gray-300 rounded-md bg-white shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 w-full md:w-auto"
//                 value={`${selectedYear}-${selectedMonth}`}
//                 onChange={handleYearMonthChange}
//               />

//               <div className="flex ml-auto gap-2">
//                 <Link
//                   href="/daily-report"
//                   className="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition shadow-sm flex items-center"
//                 >
//                   <svg
//                     xmlns="http://www.w3.org/2000/svg"
//                     className="h-4 w-4 mr-2"
//                     fill="none"
//                     viewBox="0 0 24 24"
//                     stroke="currentColor"
//                   >
//                     <path
//                       strokeLinecap="round"
//                       strokeLinejoin="round"
//                       strokeWidth="2"
//                       d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
//                     />
//                   </svg>
//                   급여명세서
//                 </Link>
//                 <button
//                   className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition shadow-sm flex items-center"
//                   onClick={handleSaveAll}
//                 >
//                   <svg
//                     xmlns="http://www.w3.org/2000/svg"
//                     className="h-4 w-4 mr-2"
//                     fill="none"
//                     viewBox="0 0 24 24"
//                     stroke="currentColor"
//                   >
//                     <path
//                       strokeLinecap="round"
//                       strokeLinejoin="round"
//                       strokeWidth="2"
//                       d="M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4"
//                     />
//                   </svg>
//                   모든 설정 저장
//                 </button>
//               </div>
//             </div>
//           </div>
//         </div>

//         {/* Explanation section */}
//         <div className="bg-gradient-to-r from-blue-50 to-blue-100 p-5 rounded-lg shadow-sm border border-blue-200">
//           <div className="flex items-start">
//             <div className="mr-4 bg-blue-200 p-2 rounded-full">
//               <svg
//                 xmlns="http://www.w3.org/2000/svg"
//                 className="h-6 w-6 text-blue-700"
//                 fill="none"
//                 viewBox="0 0 24 24"
//                 stroke="currentColor"
//               >
//                 <path
//                   strokeLinecap="round"
//                   strokeLinejoin="round"
//                   strokeWidth="2"
//                   d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
//                 />
//               </svg>
//             </div>
//             <div>
//               <h2 className="text-lg font-semibold text-blue-800 mb-2">4대보험 적용 판단 안내</h2>
//               <ul className="list-none space-y-1.5 text-sm text-blue-800">
//                 <li className="flex items-start">
//                   <span className="inline-block w-3 h-3 bg-blue-400 rounded-full mt-1.5 mr-2"></span>
//                   <span>
//                     <strong>국민연금:</strong> 60세 이하 근로자 중 월급여 220만원 이상이거나 월 8일
//                     이상 또는 월 60시간 이상 근무한 경우
//                   </span>
//                 </li>
//                 <li className="flex items-start">
//                   <span className="inline-block w-3 h-3 bg-blue-400 rounded-full mt-1.5 mr-2"></span>
//                   <span>
//                     <strong>건강보험:</strong> 월 60시간 이상 근무한 경우
//                   </span>
//                 </li>
//                 <li className="flex items-start">
//                   <span className="inline-block w-3 h-3 bg-blue-400 rounded-full mt-1.5 mr-2"></span>
//                   <span>
//                     <strong>고용보험:</strong> 일용근로자는 근로일수 및 시간 상관없이 모두 적용
//                     (65세 이상은 특례 적용)
//                   </span>
//                 </li>
//                 <li className="flex items-start">
//                   <span className="inline-block w-3 h-3 bg-blue-400 rounded-full mt-1.5 mr-2"></span>
//                   <span>
//                     <strong>산재보험:</strong> 모든 근로자 당연 적용
//                   </span>
//                 </li>
//               </ul>
//               <p className="mt-2 text-sm italic text-blue-700">
//                 자동 판단 결과를 확인하고, 필요시 수동으로 적용 여부를 조정할 수 있습니다.
//               </p>
//             </div>
//           </div>
//         </div>

//         {/* Search and statistics */}
//         <div className="flex flex-col md:flex-row justify-between items-center gap-4 bg-white p-4 rounded-lg shadow-sm">
//           <div className="relative w-full md:w-80">
//             <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
//               <svg
//                 className="h-5 w-5 text-gray-400"
//                 xmlns="http://www.w3.org/2000/svg"
//                 viewBox="0 0 20 20"
//                 fill="currentColor"
//               >
//                 <path
//                   fillRule="evenodd"
//                   d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
//                   clipRule="evenodd"
//                 />
//               </svg>
//             </div>
//             <input
//               type="text"
//               className="pl-10 pr-4 py-2 w-full border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
//               placeholder="근로자 이름 또는 주민번호 검색..."
//               value={searchTerm}
//               onChange={handleSearch}
//             />
//           </div>

//           <div className="flex gap-2 flex-wrap justify-center md:justify-end w-full md:w-auto">
//             {/* Statistics cards */}
//             <div className="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm flex items-center">
//               <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
//               <span>
//                 국민연금:{" "}
//                 {getCountByInsuranceType(
//                   [...(activeWorkers || []), ...(inactiveWorkers || [])],
//                   "national_pension"
//                 )}
//                 명
//               </span>
//             </div>
//             <div className="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm flex items-center">
//               <span className="w-2 h-2 bg-blue-500 rounded-full mr-2"></span>
//               <span>
//                 건강보험:{" "}
//                 {getCountByInsuranceType(
//                   [...(activeWorkers || []), ...(inactiveWorkers || [])],
//                   "health_insurance"
//                 )}
//                 명
//               </span>
//             </div>
//             <div className="bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-sm flex items-center">
//               <span className="w-2 h-2 bg-purple-500 rounded-full mr-2"></span>
//               <span>
//                 고용보험:{" "}
//                 {getCountByInsuranceType(
//                   [...(activeWorkers || []), ...(inactiveWorkers || [])],
//                   "employment_insurance"
//                 )}
//                 명
//               </span>
//             </div>
//             <div className="bg-amber-100 text-amber-800 px-3 py-1 rounded-full text-sm flex items-center">
//               <span className="w-2 h-2 bg-amber-500 rounded-full mr-2"></span>
//               <span>
//                 산재보험:{" "}
//                 {getCountByInsuranceType(
//                   [...(activeWorkers || []), ...(inactiveWorkers || [])],
//                   "industrial_accident"
//                 )}
//                 명
//               </span>
//             </div>
//           </div>
//         </div>

//         {/* Tab area */}
//         <div className="bg-white rounded-lg shadow overflow-hidden">
//           {/* Tab header */}
//           <div className="flex border-b">
//             <button
//               className={`py-3 px-6 font-medium text-sm focus:outline-none transition-colors ${
//                 activeTab === 0
//                   ? "border-b-2 border-blue-500 text-blue-600 bg-blue-50"
//                   : "text-gray-500 hover:text-gray-700 hover:bg-gray-50"
//               }`}
//               onClick={() => setActiveTab(0)}
//             >
//               신규 가입 대상자
//               <span className="ml-2 bg-blue-100 text-blue-800 px-2 py-0.5 rounded-full text-xs">
//                 {registeredWorkers ? registeredWorkers.length : 0}
//               </span>
//             </button>
//             <button
//               className={`py-3 px-6 font-medium text-sm focus:outline-none transition-colors ${
//                 activeTab === 1
//                   ? "border-b-2 border-blue-500 text-blue-600 bg-blue-50"
//                   : "text-gray-500 hover:text-gray-700 hover:bg-gray-50"
//               }`}
//               onClick={() => setActiveTab(1)}
//             >
//               유지 중인 근로자
//               <span className="ml-2 bg-green-100 text-green-800 px-2 py-0.5 rounded-full text-xs">
//                 {activeWorkers ? activeWorkers.length : 0}
//               </span>
//             </button>
//             <button
//               className={`py-3 px-6 font-medium text-sm focus:outline-none transition-colors ${
//                 activeTab === 2
//                   ? "border-b-2 border-blue-500 text-blue-600 bg-blue-50"
//                   : "text-gray-500 hover:text-gray-700 hover:bg-gray-50"
//               }`}
//               onClick={() => setActiveTab(2)}
//             >
//               상실 대상자
//               <span className="ml-2 bg-red-100 text-red-800 px-2 py-0.5 rounded-full text-xs">
//                 {inactiveWorkers ? inactiveWorkers.length : 0}
//               </span>
//             </button>
//           </div>

//           {/* Tab content */}
//           {/* New enrollment tab */}
//           {activeTab === 0 && (
//             <div className="overflow-x-auto">
//               <table className="min-w-full divide-y divide-gray-200">
//                 <thead className="bg-gray-50">
//                   <tr>
//                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-12">
//                       No.
//                     </th>
//                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                       근로자 정보
//                     </th>
//                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                       근무 이력
//                     </th>
//                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                       4대보험 가입 상태
//                     </th>
//                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-32">
//                       액션
//                     </th>
//                   </tr>
//                 </thead>
//                 <tbody className="bg-white divide-y divide-gray-200">
//                   {filterWorkers(registeredWorkers).length > 0 ? (
//                     filterWorkers(registeredWorkers).map((worker, index) => {
//                       const yearMonth = `${selectedYear}-${selectedMonth}`;
//                       const workHistory =
//                         workersHistory[`${worker.worker_id}-${selectedSite}-${yearMonth}`] || {};
//                       return (
//                         <React.Fragment key={worker.worker_id}>
//                           <tr
//                             className={`${
//                               selectedWorkerId === worker.worker_id
//                                 ? "bg-blue-50"
//                                 : "hover:bg-gray-50"
//                             } cursor-pointer transition-colors`}
//                             onClick={() => setSelectedWorkerId(worker.worker_id)}
//                           >
//                             <td className="px-4 py-4 whitespace-nowrap text-sm text-gray-500">
//                               {index + 1}
//                             </td>
//                             <td className="px-4 py-4">
//                               <div className="flex items-center">
//                                 <div className="flex-shrink-0 h-10 w-10 bg-gray-200 rounded-full flex items-center justify-center">
//                                   <span className="text-gray-600 font-medium">
//                                     {worker.name ? worker.name.charAt(0) : "?"}
//                                   </span>
//                                 </div>
//                                 <div className="ml-4">
//                                   <div className="text-sm font-medium text-gray-900">
//                                     {worker.name}
//                                   </div>
//                                   <div className="text-sm text-gray-500">
//                                     {formatResidentNumber(worker.resident_number)}
//                                   </div>
//                                   <div className="text-sm text-gray-500 flex items-center mt-1">
//                                     <span className="bg-gray-100 text-gray-600 px-2 py-0.5 rounded text-xs">
//                                       {worker.jobName || "직종 미지정"}
//                                     </span>
//                                     <span className="mx-1">•</span>
//                                     <span>{worker.age || "?"}세</span>
//                                   </div>
//                                 </div>
//                               </div>
//                             </td>
//                             <td className="px-4 py-4">
//                               <div className="grid grid-cols-2 gap-x-4 gap-y-1">
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">전월 근무: </span>
//                                   <span className="font-medium">
//                                     {workHistory.previousMonthWorkDays || 0}일
//                                   </span>
//                                   <span className="text-gray-400"> / </span>
//                                   <span className="font-medium">
//                                     {workHistory.previousMonthWorkHours || 0}시간
//                                   </span>
//                                 </div>
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">당월 근무: </span>
//                                   <span className="font-medium">
//                                     {workHistory.currentMonthWorkDays || 0}일
//                                   </span>
//                                   <span className="text-gray-400"> / </span>
//                                   <span className="font-medium">
//                                     {workHistory.currentMonthWorkHours || 0}시간
//                                   </span>
//                                 </div>
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">첫 근무일: </span>
//                                   <span className="font-medium">
//                                     {workHistory.firstWorkDate
//                                       ? new Date(workHistory.firstWorkDate).toLocaleDateString()
//                                       : "기록 없음"}
//                                   </span>
//                                 </div>
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">당월 급여: </span>
//                                   <span className="font-medium">
//                                     {(workHistory.monthlyWage || 0).toLocaleString()}원
//                                   </span>
//                                 </div>
//                               </div>
//                             </td>
//                             <td className="px-4 py-4">
//                               <div className="grid grid-cols-2 gap-2">
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">국민연금: </span>
//                                   <span
//                                     className={`px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusStyle(
//                                       getEffectiveStatus(
//                                         worker.worker_id,
//                                         selectedSite,
//                                         "national_pension"
//                                       )
//                                     )}`}
//                                   >
//                                     {getStatusText(
//                                       getEffectiveStatus(
//                                         worker.worker_id,
//                                         selectedSite,
//                                         "national_pension"
//                                       )
//                                     )}
//                                   </span>
//                                 </div>
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">건강보험: </span>
//                                   <span
//                                     className={`px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusStyle(
//                                       getEffectiveStatus(
//                                         worker.worker_id,
//                                         selectedSite,
//                                         "health_insurance"
//                                       )
//                                     )}`}
//                                   >
//                                     {getStatusText(
//                                       getEffectiveStatus(
//                                         worker.worker_id,
//                                         selectedSite,
//                                         "health_insurance"
//                                       )
//                                     )}
//                                   </span>
//                                 </div>
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">고용보험: </span>
//                                   <span
//                                     className={`px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusStyle(
//                                       getEffectiveStatus(
//                                         worker.worker_id,
//                                         selectedSite,
//                                         "employment_insurance"
//                                       )
//                                     )}`}
//                                   >
//                                     {getStatusText(
//                                       getEffectiveStatus(
//                                         worker.worker_id,
//                                         selectedSite,
//                                         "employment_insurance"
//                                       )
//                                     )}
//                                   </span>
//                                 </div>
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">산재보험: </span>
//                                   <span
//                                     className={`px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusStyle(
//                                       getEffectiveStatus(
//                                         worker.worker_id,
//                                         selectedSite,
//                                         "industrial_accident"
//                                       )
//                                     )}`}
//                                   >
//                                     {getStatusText(
//                                       getEffectiveStatus(
//                                         worker.worker_id,
//                                         selectedSite,
//                                         "industrial_accident"
//                                       )
//                                     )}
//                                   </span>
//                                 </div>
//                               </div>
//                             </td>
//                             <td className="px-4 py-4 whitespace-nowrap text-right text-sm font-medium">
//                               <button
//                                 onClick={(e) => handleAcquisition(worker.worker_id, e)}
//                                 className="inline-flex items-center px-3 py-1.5 bg-blue-600 text-white text-xs font-medium rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition"
//                               >
//                                 <svg
//                                   xmlns="http://www.w3.org/2000/svg"
//                                   className="h-4 w-4 mr-1"
//                                   fill="none"
//                                   viewBox="0 0 24 24"
//                                   stroke="currentColor"
//                                 >
//                                   <path
//                                     strokeLinecap="round"
//                                     strokeLinejoin="round"
//                                     strokeWidth="2"
//                                     d="M12 6v6m0 0v6m0-6h6m-6 0H6"
//                                   />
//                                 </svg>
//                                 가입 처리
//                               </button>
//                             </td>
//                           </tr>

//                           {/* Detail panel for new enrollment candidates */}
//                           {selectedWorkerId === worker.worker_id && showDetail && (
//                             <tr>
//                               <td colSpan="5" className="p-0">
//                                 <div className="border-t border-b border-blue-200 bg-blue-50 p-6">
//                                   <div className="flex justify-between items-start mb-4">
//                                     <h3 className="text-lg font-semibold text-blue-800">
//                                       {worker.name} - 4대보험 세부 정보
//                                     </h3>
//                                     <button
//                                       onClick={() => setSelectedWorkerId(null)}
//                                       className="text-gray-400 hover:text-gray-600"
//                                     >
//                                       <svg
//                                         xmlns="http://www.w3.org/2000/svg"
//                                         className="h-6 w-6"
//                                         fill="none"
//                                         viewBox="0 0 24 24"
//                                         stroke="currentColor"
//                                       >
//                                         <path
//                                           strokeLinecap="round"
//                                           strokeLinejoin="round"
//                                           strokeWidth="2"
//                                           d="M6 18L18 6M6 6l12 12"
//                                         />
//                                       </svg>
//                                     </button>
//                                   </div>

//                                   <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
//                                     {/* 근로자 정보 */}
//                                     <div className="bg-white p-4 rounded-lg shadow-sm">
//                                       <h4 className="text-md font-semibold text-blue-700 mb-3 pb-2 border-b">
//                                         근로자 정보
//                                       </h4>
//                                       <div className="space-y-3 text-sm">
//                                         <div className="flex">
//                                           <span className="font-medium w-28">이름:</span>
//                                           <span>{worker.name}</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">주민등록번호:</span>
//                                           <span>
//                                             {formatResidentNumber(worker.resident_number)}
//                                           </span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">연락처:</span>
//                                           <span>{formatPhoneNumber(worker.contact_number)}</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">나이:</span>
//                                           <span>{worker.age}세</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">직종:</span>
//                                           <span>{worker.jobName || "미지정"}</span>
//                                         </div>
//                                       </div>
//                                     </div>

//                                     {/* 근무 이력 정보 */}
//                                     <div className="bg-white p-4 rounded-lg shadow-sm">
//                                       <h4 className="text-md font-semibold text-blue-700 mb-3 pb-2 border-b">
//                                         근무 이력
//                                       </h4>
//                                       <div className="space-y-3 text-sm">
//                                         <div className="flex">
//                                           <span className="font-medium w-28">첫 근무일:</span>
//                                           <span>
//                                             {workHistory.firstWorkDate
//                                               ? new Date(
//                                                   workHistory.firstWorkDate
//                                                 ).toLocaleDateString()
//                                               : "없음"}
//                                           </span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">전월 근무일수:</span>
//                                           <span>{workHistory.previousMonthWorkDays || 0}일</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">전월 근무시간:</span>
//                                           <span>{workHistory.previousMonthWorkHours || 0}시간</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">당월 근무일수:</span>
//                                           <span>{workHistory.currentMonthWorkDays || 0}일</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">당월 근무시간:</span>
//                                           <span>{workHistory.currentMonthWorkHours || 0}시간</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">당월 급여:</span>
//                                           <span>
//                                             {(workHistory.monthlyWage || 0).toLocaleString()}원
//                                           </span>
//                                         </div>
//                                       </div>
//                                     </div>
//                                   </div>

//                                   <div className="mt-6">
//                                     <h4 className="text-md font-semibold text-blue-700 mb-3 pb-2 border-b">
//                                       4대보험 가입 정보
//                                     </h4>
//                                     <div className="bg-white border rounded-lg shadow-sm">
//                                       <table className="min-w-full divide-y divide-gray-200">
//                                         <thead className="bg-gray-50">
//                                           <tr>
//                                             <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                                               보험 종류
//                                             </th>
//                                             <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                                               가입일
//                                             </th>
//                                             <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                                               가입사유
//                                             </th>
//                                             <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                                               상태
//                                             </th>
//                                           </tr>
//                                         </thead>
//                                         <tbody className="divide-y divide-gray-200">
//                                           {enrollmentRecords[
//                                             `${worker.worker_id}-${selectedSite}`
//                                           ]?.map((enrollment, idx) => (
//                                             <tr key={idx} className="hover:bg-gray-50">
//                                               <td className="px-4 py-3 text-sm">
//                                                 {enrollment.insurance_type ===
//                                                   "national_pension" && (
//                                                   <span className="flex items-center">
//                                                     <span className="w-2 h-2 bg-blue-500 rounded-full mr-2"></span>
//                                                     국민연금
//                                                   </span>
//                                                 )}
//                                                 {enrollment.insurance_type ===
//                                                   "health_insurance" && (
//                                                   <span className="flex items-center">
//                                                     <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
//                                                     건강보험
//                                                   </span>
//                                                 )}
//                                                 {enrollment.insurance_type ===
//                                                   "employment_insurance" && (
//                                                   <span className="flex items-center">
//                                                     <span className="w-2 h-2 bg-purple-500 rounded-full mr-2"></span>
//                                                     고용보험
//                                                   </span>
//                                                 )}
//                                                 {enrollment.insurance_type ===
//                                                   "industrial_accident" && (
//                                                   <span className="flex items-center">
//                                                     <span className="w-2 h-2 bg-orange-500 rounded-full mr-2"></span>
//                                                     산재보험
//                                                   </span>
//                                                 )}
//                                               </td>
//                                               <td className="px-4 py-3 text-sm">
//                                                 {enrollment.acquisition_date &&
//                                                   new Date(
//                                                     enrollment.acquisition_date
//                                                   ).toLocaleDateString()}
//                                               </td>
//                                               <td className="px-4 py-3 text-sm">
//                                                 {enrollment.acquisition_reason_code === "01" &&
//                                                   "신규 취득"}
//                                                 {enrollment.acquisition_reason_code === "02" &&
//                                                   "재취득"}
//                                                 {enrollment.acquisition_reason_code !== "01" &&
//                                                   enrollment.acquisition_reason_code !== "02" &&
//                                                   enrollment.acquisition_reason_code}
//                                               </td>
//                                               <td className="px-4 py-3 text-sm">
//                                                 {enrollment.loss_date ? (
//                                                   <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
//                                                     상실 (
//                                                     {new Date(
//                                                       enrollment.loss_date
//                                                     ).toLocaleDateString()}
//                                                     )
//                                                   </span>
//                                                 ) : (
//                                                   <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
//                                                     가입 중
//                                                   </span>
//                                                 )}
//                                               </td>
//                                             </tr>
//                                           ))}
//                                           {(!enrollmentRecords[
//                                             `${worker.worker_id}-${selectedSite}`
//                                           ] ||
//                                             enrollmentRecords[`${worker.worker_id}-${selectedSite}`]
//                                               .length === 0) && (
//                                             <tr>
//                                               <td
//                                                 colSpan="4"
//                                                 className="px-6 py-10 text-center text-gray-500"
//                                               >
//                                                 <div className="flex flex-col items-center">
//                                                   <svg
//                                                     xmlns="http://www.w3.org/2000/svg"
//                                                     className="h-8 w-8 text-gray-300 mb-2"
//                                                     fill="none"
//                                                     viewBox="0 0 24 24"
//                                                     stroke="currentColor"
//                                                   >
//                                                     <path
//                                                       strokeLinecap="round"
//                                                       strokeLinejoin="round"
//                                                       strokeWidth="2"
//                                                       d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
//                                                     />
//                                                   </svg>
//                                                   가입 정보가 없습니다.
//                                                 </div>
//                                               </td>
//                                             </tr>
//                                           )}
//                                         </tbody>
//                                       </table>
//                                     </div>

//                                     <div className="mt-6">
//                                       <h4 className="text-md font-semibold text-blue-700 mb-3 pb-2 border-b">
//                                         4대보험 설정
//                                       </h4>
//                                       <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
//                                         {/* 국민연금 */}
//                                         <div className="border rounded-lg p-4 bg-white">
//                                           <h5 className="font-medium mb-2">국민연금</h5>
//                                           <div className="space-y-2 mb-4">
//                                             <p className="text-sm">
//                                               <span className="font-medium">자동 판단:</span>{" "}
//                                               {getEffectiveStatus(
//                                                 worker.worker_id,
//                                                 selectedSite,
//                                                 "national_pension"
//                                               ) === "auto_required" ||
//                                               getEffectiveStatus(
//                                                 worker.worker_id,
//                                                 selectedSite,
//                                                 "national_pension"
//                                               ) === "manual_required" ? (
//                                                 <span className="text-green-600">적용 대상</span>
//                                               ) : (
//                                                 <span className="text-red-600">제외 대상</span>
//                                               )}
//                                             </p>
//                                           </div>
//                                           <div className="flex space-x-2">
//                                             <button
//                                               onClick={(e) =>
//                                                 handleStatusChange(
//                                                   worker.worker_id,
//                                                   "national_pension",
//                                                   "manual_required",
//                                                   e
//                                                 )
//                                               }
//                                               className={`px-2 py-1 text-xs rounded ${
//                                                 getEffectiveStatus(
//                                                   worker.worker_id,
//                                                   selectedSite,
//                                                   "national_pension"
//                                                 ) === "manual_required"
//                                                   ? "bg-blue-500 text-white"
//                                                   : "bg-gray-200 text-gray-700 hover:bg-blue-100"
//                                               }`}
//                                             >
//                                               수동 적용
//                                             </button>
//                                             <button
//                                               className={`px-2 py-1 text-xs rounded ${
//                                                 getEffectiveStatus(
//                                                   worker.worker_id,
//                                                   selectedSite,
//                                                   "national_pension"
//                                                 ) === "manual_exempted"
//                                                   ? "bg-blue-500 text-white"
//                                                   : "bg-gray-200 text-gray-700 hover:bg-blue-100"
//                                               }`}
//                                               onClick={(e) =>
//                                                 handleStatusChange(
//                                                   worker.worker_id,
//                                                   "national_pension",
//                                                   "manual_exempted",
//                                                   e
//                                                 )
//                                               }
//                                             >
//                                               수동 제외
//                                             </button>
//                                             <button
//                                               className={`px-2 py-1 text-xs rounded ${(() => {
//                                                 const status = getEffectiveStatus(
//                                                   worker.worker_id,
//                                                   selectedSite,
//                                                   "national_pension"
//                                                 );
//                                                 return status &&
//                                                   status.statusCode &&
//                                                   status.statusCode.startsWith("auto_")
//                                                   ? "bg-blue-500 text-white"
//                                                   : "bg-gray-200 text-gray-700 hover:bg-blue-100";
//                                               })()}`}
//                                               onClick={(e) =>
//                                                 handleStatusChange(
//                                                   worker.worker_id,
//                                                   "national_pension",
//                                                   getEffectiveStatus(
//                                                     worker.worker_id,
//                                                     selectedSite,
//                                                     "national_pension"
//                                                   ) === "auto_required"
//                                                     ? "auto_required"
//                                                     : "auto_exempted",
//                                                   e
//                                                 )
//                                               }
//                                             >
//                                               자동 설정
//                                             </button>
//                                           </div>
//                                         </div>

//                                         {/* 건강보험 */}
//                                         <div className="border rounded-lg p-4 bg-white">
//                                           <h5 className="font-medium mb-2">건강보험</h5>
//                                           <div className="space-y-2 mb-4">
//                                             <p className="text-sm">
//                                               <span className="font-medium">자동 판단:</span>{" "}
//                                               {getEffectiveStatus(
//                                                 worker.worker_id,
//                                                 selectedSite,
//                                                 "health_insurance"
//                                               ) === "auto_required" ||
//                                               getEffectiveStatus(
//                                                 worker.worker_id,
//                                                 selectedSite,
//                                                 "health_insurance"
//                                               ) === "manual_required" ? (
//                                                 <span className="text-green-600">적용 대상</span>
//                                               ) : (
//                                                 <span className="text-red-600">제외 대상</span>
//                                               )}
//                                             </p>
//                                           </div>
//                                           <div className="flex space-x-2">
//                                             <button
//                                               onClick={(e) =>
//                                                 handleStatusChange(
//                                                   worker.worker_id,
//                                                   "health_insurance",
//                                                   "manual_required",
//                                                   e
//                                                 )
//                                               }
//                                               className={`px-2 py-1 text-xs rounded ${
//                                                 getEffectiveStatus(
//                                                   worker.worker_id,
//                                                   selectedSite,
//                                                   "health_insurance"
//                                                 ) === "manual_required"
//                                                   ? "bg-blue-500 text-white"
//                                                   : "bg-gray-200 text-gray-700 hover:bg-blue-100"
//                                               }`}
//                                             >
//                                               수동 적용
//                                             </button>
//                                             <button
//                                               className={`px-2 py-1 text-xs rounded ${
//                                                 getEffectiveStatus(
//                                                   worker.worker_id,
//                                                   selectedSite,
//                                                   "health_insurance"
//                                                 ) === "manual_exempted"
//                                                   ? "bg-blue-500 text-white"
//                                                   : "bg-gray-200 text-gray-700 hover:bg-blue-100"
//                                               }`}
//                                               onClick={(e) =>
//                                                 handleStatusChange(
//                                                   worker.worker_id,
//                                                   "health_insurance",
//                                                   "manual_exempted",
//                                                   e
//                                                 )
//                                               }
//                                             >
//                                               수동 제외
//                                             </button>
//                                             <button
//                                               className={`px-2 py-1 text-xs rounded ${(() => {
//                                                 const status = getEffectiveStatus(
//                                                   worker.worker_id,
//                                                   selectedSite,
//                                                   "health_insurance"
//                                                 );
//                                                 return status &&
//                                                   status.statusCode &&
//                                                   status.statusCode.startsWith("auto_")
//                                                   ? "bg-blue-500 text-white"
//                                                   : "bg-gray-200 text-gray-700 hover:bg-blue-100";
//                                               })()}`}
//                                               onClick={(e) =>
//                                                 handleStatusChange(
//                                                   worker.worker_id,
//                                                   "health_insurance",
//                                                   getEffectiveStatus(
//                                                     worker.worker_id,
//                                                     selectedSite,
//                                                     "health_insurance"
//                                                   ) === "auto_required"
//                                                     ? "auto_required"
//                                                     : "auto_exempted",
//                                                   e
//                                                 )
//                                               }
//                                             >
//                                               자동 설정
//                                             </button>
//                                           </div>
//                                         </div>

//                                         {/* 고용보험 */}
//                                         <div className="border rounded-lg p-4 bg-white">
//                                           <h5 className="font-medium mb-2">고용보험</h5>
//                                           <div className="space-y-2 mb-4">
//                                             <p className="text-sm">
//                                               <span className="font-medium">자동 판단:</span>{" "}
//                                               {getEffectiveStatus(
//                                                 worker.worker_id,
//                                                 selectedSite,
//                                                 "employment_insurance"
//                                               ) === "auto_required" ||
//                                               getEffectiveStatus(
//                                                 worker.worker_id,
//                                                 selectedSite,
//                                                 "employment_insurance"
//                                               ) === "manual_required" ? (
//                                                 <span className="text-green-600">적용 대상</span>
//                                               ) : (
//                                                 <span className="text-red-600">제외 대상</span>
//                                               )}
//                                             </p>
//                                           </div>
//                                           <div className="flex space-x-2">
//                                             <button
//                                               onClick={(e) =>
//                                                 handleStatusChange(
//                                                   worker.worker_id,
//                                                   "employment_insurance",
//                                                   "manual_required",
//                                                   e
//                                                 )
//                                               }
//                                               className={`px-2 py-1 text-xs rounded ${
//                                                 getEffectiveStatus(
//                                                   worker.worker_id,
//                                                   selectedSite,
//                                                   "employment_insurance"
//                                                 ) === "manual_required"
//                                                   ? "bg-blue-500 text-white"
//                                                   : "bg-gray-200 text-gray-700 hover:bg-blue-100"
//                                               }`}
//                                             >
//                                               수동 적용
//                                             </button>
//                                             <button
//                                               className={`px-2 py-1 text-xs rounded ${
//                                                 getEffectiveStatus(
//                                                   worker.worker_id,
//                                                   selectedSite,
//                                                   "employment_insurance"
//                                                 ) === "manual_exempted"
//                                                   ? "bg-blue-500 text-white"
//                                                   : "bg-gray-200 text-gray-700 hover:bg-blue-100"
//                                               }`}
//                                               onClick={(e) =>
//                                                 handleStatusChange(
//                                                   worker.worker_id,
//                                                   "employment_insurance",
//                                                   "manual_exempted",
//                                                   e
//                                                 )
//                                               }
//                                             >
//                                               수동 제외
//                                             </button>
//                                             <button
//                                               className={`px-2 py-1 text-xs rounded ${(() => {
//                                                 const status = getEffectiveStatus(
//                                                   worker.worker_id,
//                                                   selectedSite,
//                                                   "employment_insurance"
//                                                 );
//                                                 return status &&
//                                                   status.statusCode &&
//                                                   status.statusCode.startsWith("auto_")
//                                                   ? "bg-blue-500 text-white"
//                                                   : "bg-gray-200 text-gray-700 hover:bg-blue-100";
//                                               })()}`}
//                                               onClick={(e) =>
//                                                 handleStatusChange(
//                                                   worker.worker_id,
//                                                   "employment_insurance",
//                                                   getEffectiveStatus(
//                                                     worker.worker_id,
//                                                     selectedSite,
//                                                     "employment_insurance"
//                                                   ) === "auto_required"
//                                                     ? "auto_required"
//                                                     : "auto_exempted",
//                                                   e
//                                                 )
//                                               }
//                                             >
//                                               자동 설정
//                                             </button>
//                                           </div>
//                                         </div>

//                                         {/* 산재보험 */}
//                                         <div className="border rounded-lg p-4 bg-white">
//                                           <h5 className="font-medium mb-2">산재보험</h5>
//                                           <div className="space-y-2 mb-4">
//                                             <p className="text-sm">
//                                               <span className="font-medium">자동 판단:</span>
//                                               <span className="text-green-600">적용 대상</span>
//                                             </p>
//                                             <p className="text-sm">
//                                               <span className="font-medium">사유:</span> 모든 근로자
//                                               당연 적용
//                                             </p>
//                                           </div>
//                                           <div className="flex space-x-2">
//                                             <button
//                                               className="px-2 py-1 text-xs rounded bg-blue-500 text-white cursor-not-allowed"
//                                               disabled
//                                             >
//                                               항상 적용
//                                             </button>
//                                           </div>
//                                         </div>
//                                       </div>

//                                       {/* 사유 입력 */}
//                                       <div className="mt-6">
//                                         <h4 className="text-md font-semibold text-blue-700 mb-2">
//                                           수동 설정 사유
//                                         </h4>
//                                         <div className="flex items-start space-x-2">
//                                           <textarea
//                                             className="flex-1 p-2 border rounded"
//                                             rows="2"
//                                             placeholder="수동 설정 사유를 입력하세요"
//                                             value={getManualReason(worker.worker_id)}
//                                             onChange={(e) => {
//                                               const updatedSettings = { ...manualSettings };
//                                               const key = `${worker.worker_id}-${selectedSite}`;
//                                               if (!updatedSettings[key]) {
//                                                 updatedSettings[key] = {
//                                                   manual_reason: e.target.value,
//                                                 };
//                                               } else {
//                                                 updatedSettings[key].manual_reason = e.target.value;
//                                               }
//                                             }}
//                                           ></textarea>
//                                           <button
//                                             className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
//                                             onClick={(e) => {
//                                               e.stopPropagation();
//                                               handleReason(
//                                                 worker.worker_id,
//                                                 getManualReason(worker.worker_id),
//                                                 e
//                                               );
//                                             }}
//                                           >
//                                             저장
//                                           </button>
//                                         </div>
//                                       </div>
//                                     </div>
//                                   </div>
//                                 </div>
//                               </td>
//                             </tr>
//                           )}
//                         </React.Fragment>
//                       );
//                     })
//                   ) : (
//                     <tr>
//                       <td colSpan="5" className="px-6 py-12 text-center">
//                         <div className="flex flex-col items-center">
//                           <svg
//                             xmlns="http://www.w3.org/2000/svg"
//                             className="h-12 w-12 text-gray-300 mb-4"
//                             fill="none"
//                             viewBox="0 0 24 24"
//                             stroke="currentColor"
//                           >
//                             <path
//                               strokeLinecap="round"
//                               strokeLinejoin="round"
//                               strokeWidth="2"
//                               d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
//                             />
//                           </svg>
//                           <span className="text-gray-500 text-lg">
//                             {selectedSite
//                               ? searchTerm
//                                 ? "검색 결과가 없습니다."
//                                 : "신규 가입 대상자가 없습니다."
//                               : "공사현장을 선택해주세요."}
//                           </span>
//                         </div>
//                       </td>
//                     </tr>
//                   )}
//                 </tbody>
//               </table>
//             </div>
//           )}
//           {/* 디버깅 정보 (개발 중에만 사용) */}
//           {process.env.NODE_ENV === "development" && (
//             <div className="mt-4 p-2 bg-gray-100 text-xs text-gray-700 whitespace-pre-wrap font-mono">
//               <details>
//                 <summary>디버깅 정보</summary>
//                 <p>선택된 사이트: {selectedSite}</p>
//                 <p>
//                   연/월: {selectedYear}-{selectedMonth}
//                 </p>
//                 <p>workersHistory 키: {Object.keys(workersHistory).join(", ")}</p>
//               </details>
//             </div>
//           )}
//           {/* Active enrollment tab */}
//           {activeTab === 1 && (
//             <div className="overflow-x-auto">
//               <table className="min-w-full divide-y divide-gray-200">
//                 <thead className="bg-gray-50">
//                   <tr>
//                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-12">
//                       No.
//                     </th>
//                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                       근로자 정보
//                     </th>
//                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                       근무 이력
//                     </th>
//                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                       4대보험 가입 상태
//                     </th>
//                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-32">
//                       액션
//                     </th>
//                   </tr>
//                 </thead>
//                 <tbody className="bg-white divide-y divide-gray-200">
//                   {filterWorkers(activeWorkers).length > 0 ? (
//                     filterWorkers(activeWorkers).map((worker, index) => {
//                       const yearMonth = `${selectedYear}-${selectedMonth}`;
//                       const workHistory =
//                         workersHistory[`${worker.worker_id}-${selectedSite}-${yearMonth}`] || {};

//                       return (
//                         <React.Fragment key={worker.worker_id}>
//                           <tr
//                             className={`${
//                               selectedWorkerId === worker.worker_id
//                                 ? "bg-blue-50"
//                                 : "hover:bg-gray-50"
//                             } cursor-pointer transition-colors`}
//                             onClick={() => setSelectedWorkerId(worker.worker_id)}
//                           >
//                             <td className="px-4 py-4 whitespace-nowrap text-sm text-gray-500">
//                               {index + 1}
//                             </td>
//                             <td className="px-4 py-4">
//                               <div className="flex items-center">
//                                 <div className="flex-shrink-0 h-10 w-10 bg-gray-200 rounded-full flex items-center justify-center">
//                                   <span className="text-gray-600 font-medium">
//                                     {worker.name ? worker.name.charAt(0) : "?"}
//                                   </span>
//                                 </div>
//                                 <div className="ml-4">
//                                   <div className="text-sm font-medium text-gray-900">
//                                     {worker.name}
//                                   </div>
//                                   <div className="text-sm text-gray-500">
//                                     {formatResidentNumber(worker.resident_number)}
//                                   </div>
//                                   <div className="text-sm text-gray-500 flex items-center mt-1">
//                                     <span className="bg-gray-100 text-gray-600 px-2 py-0.5 rounded text-xs">
//                                       {worker.jobName || "직종 미지정"}
//                                     </span>
//                                     <span className="mx-1">•</span>
//                                     <span>{worker.age || "?"}세</span>
//                                   </div>
//                                 </div>
//                               </div>
//                             </td>
//                             <td className="px-4 py-4">
//                               <div className="grid grid-cols-2 gap-x-4 gap-y-1">
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">전월 근무: </span>
//                                   <span className="font-medium">
//                                     {workHistory.previousMonthWorkDays || 0}일
//                                   </span>
//                                   <span className="text-gray-400"> / </span>
//                                   <span className="font-medium">
//                                     {workHistory.previousMonthWorkHours || 0}시간
//                                   </span>
//                                 </div>
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">당월 근무: </span>
//                                   <span className="font-medium">
//                                     {workHistory.currentMonthWorkDays || 0}일
//                                   </span>
//                                   <span className="text-gray-400"> / </span>
//                                   <span className="font-medium">
//                                     {workHistory.currentMonthWorkHours || 0}시간
//                                   </span>
//                                 </div>
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">첫 근무일: </span>
//                                   <span className="font-medium">
//                                     {workHistory.firstWorkDate
//                                       ? new Date(workHistory.firstWorkDate).toLocaleDateString()
//                                       : "기록 없음"}
//                                   </span>
//                                 </div>
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">당월 급여: </span>
//                                   <span className="font-medium">
//                                     {(workHistory.monthlyWage || 0).toLocaleString()}원
//                                   </span>
//                                 </div>
//                               </div>
//                             </td>
//                             <td className="px-4 py-4">
//                               <div className="grid grid-cols-2 gap-2">
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">국민연금: </span>
//                                   <span className="px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
//                                     {isEnrolled(worker.worker_id, selectedSite, "national_pension")
//                                       ? "가입"
//                                       : "미가입"}
//                                   </span>
//                                 </div>
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">건강보험: </span>
//                                   <span className="px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
//                                     {isEnrolled(worker.worker_id, selectedSite, "health_insurance")
//                                       ? "가입"
//                                       : "미가입"}
//                                   </span>
//                                 </div>
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">고용보험: </span>
//                                   <span className="px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
//                                     {isEnrolled(
//                                       worker.worker_id,
//                                       selectedSite,
//                                       "employment_insurance"
//                                     )
//                                       ? "가입"
//                                       : "미가입"}
//                                   </span>
//                                 </div>
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">산재보험: </span>
//                                   <span className="px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
//                                     {isEnrolled(
//                                       worker.worker_id,
//                                       selectedSite,
//                                       "industrial_accident"
//                                     )
//                                       ? "가입"
//                                       : "미가입"}
//                                   </span>
//                                 </div>
//                               </div>
//                             </td>
//                             <td className="px-4 py-4 whitespace-nowrap text-right text-sm font-medium">
//                               <button
//                                 onClick={(e) => handleLoss(worker.worker_id, e)}
//                                 className="inline-flex items-center px-3 py-1.5 bg-red-600 text-white text-xs font-medium rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition"
//                               >
//                                 <svg
//                                   xmlns="http://www.w3.org/2000/svg"
//                                   className="h-4 w-4 mr-1"
//                                   fill="none"
//                                   viewBox="0 0 24 24"
//                                   stroke="currentColor"
//                                 >
//                                   <path
//                                     strokeLinecap="round"
//                                     strokeLinejoin="round"
//                                     strokeWidth="2"
//                                     d="M6 18L18 6M6 6l12 12"
//                                   />
//                                 </svg>
//                                 상실 처리
//                               </button>
//                             </td>
//                           </tr>

//                           {/* Detail panel for active workers */}
//                           {selectedWorkerId === worker.worker_id && showDetail && (
//                             <tr>
//                               <td colSpan="5" className="p-0">
//                                 <div className="border-t border-b border-blue-200 bg-blue-50 p-6">
//                                   <div className="flex justify-between items-start mb-4">
//                                     <h3 className="text-lg font-semibold text-blue-800">
//                                       {worker.name} - 4대보험 세부 정보
//                                     </h3>
//                                     <button
//                                       onClick={() => setSelectedWorkerId(null)}
//                                       className="text-gray-400 hover:text-gray-600"
//                                     >
//                                       <svg
//                                         xmlns="http://www.w3.org/2000/svg"
//                                         className="h-6 w-6"
//                                         fill="none"
//                                         viewBox="0 0 24 24"
//                                         stroke="currentColor"
//                                       >
//                                         <path
//                                           strokeLinecap="round"
//                                           strokeLinejoin="round"
//                                           strokeWidth="2"
//                                           d="M6 18L18 6M6 6l12 12"
//                                         />
//                                       </svg>
//                                     </button>
//                                   </div>

//                                   <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
//                                     {/* 근로자 정보 */}
//                                     <div className="bg-white p-4 rounded-lg shadow-sm">
//                                       <h4 className="text-md font-semibold text-blue-700 mb-3 pb-2 border-b">
//                                         근로자 정보
//                                       </h4>
//                                       <div className="space-y-3 text-sm">
//                                         <div className="flex">
//                                           <span className="font-medium w-28">이름:</span>
//                                           <span>{worker.name}</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">주민등록번호:</span>
//                                           <span>
//                                             {formatResidentNumber(worker.resident_number)}
//                                           </span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">연락처:</span>
//                                           <span>{formatPhoneNumber(worker.contact_number)}</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">나이:</span>
//                                           <span>{worker.age}세</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">직종:</span>
//                                           <span>{worker.jobName || "미지정"}</span>
//                                         </div>
//                                       </div>
//                                     </div>

//                                     {/* 근무 이력 정보 */}
//                                     <div className="bg-white p-4 rounded-lg shadow-sm">
//                                       <h4 className="text-md font-semibold text-blue-700 mb-3 pb-2 border-b">
//                                         근무 이력
//                                       </h4>
//                                       <div className="space-y-3 text-sm">
//                                         <div className="flex">
//                                           <span className="font-medium w-28">첫 근무일:</span>
//                                           <span>
//                                             {workHistory.firstWorkDate
//                                               ? new Date(
//                                                   workHistory.firstWorkDate
//                                                 ).toLocaleDateString()
//                                               : "없음"}
//                                           </span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">전월 근무일수:</span>
//                                           <span>{workHistory.previousMonthWorkDays || 0}일</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">전월 근무시간:</span>
//                                           <span>{workHistory.previousMonthWorkHours || 0}시간</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">당월 근무일수:</span>
//                                           <span>{workHistory.currentMonthWorkDays || 0}일</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">당월 근무시간:</span>
//                                           <span>{workHistory.currentMonthWorkHours || 0}시간</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">당월 급여:</span>
//                                           <span>
//                                             {(workHistory.monthlyWage || 0).toLocaleString()}원
//                                           </span>
//                                         </div>
//                                       </div>
//                                     </div>
//                                   </div>

//                                   <div className="mt-6">
//                                     <h4 className="text-md font-semibold text-blue-700 mb-3 pb-2 border-b">
//                                       4대보험 가입 정보
//                                     </h4>
//                                     <div className="bg-white border rounded-lg shadow-sm">
//                                       <table className="min-w-full divide-y divide-gray-200">
//                                         <thead className="bg-gray-50">
//                                           <tr>
//                                             <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                                               보험 종류
//                                             </th>
//                                             <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                                               가입일
//                                             </th>
//                                             <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                                               가입사유
//                                             </th>
//                                             <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                                               상태
//                                             </th>
//                                           </tr>
//                                         </thead>
//                                         <tbody className="divide-y divide-gray-200">
//                                           {enrollmentRecords[
//                                             `${worker.worker_id}-${selectedSite}`
//                                           ]?.map((enrollment, idx) => (
//                                             <tr key={idx} className="hover:bg-gray-50">
//                                               <td className="px-4 py-3 text-sm">
//                                                 {enrollment.insurance_type ===
//                                                   "national_pension" && (
//                                                   <span className="flex items-center">
//                                                     <span className="w-2 h-2 bg-blue-500 rounded-full mr-2"></span>
//                                                     국민연금
//                                                   </span>
//                                                 )}
//                                                 {enrollment.insurance_type ===
//                                                   "health_insurance" && (
//                                                   <span className="flex items-center">
//                                                     <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
//                                                     건강보험
//                                                   </span>
//                                                 )}
//                                                 {enrollment.insurance_type ===
//                                                   "employment_insurance" && (
//                                                   <span className="flex items-center">
//                                                     <span className="w-2 h-2 bg-purple-500 rounded-full mr-2"></span>
//                                                     고용보험
//                                                   </span>
//                                                 )}
//                                                 {enrollment.insurance_type ===
//                                                   "industrial_accident" && (
//                                                   <span className="flex items-center">
//                                                     <span className="w-2 h-2 bg-orange-500 rounded-full mr-2"></span>
//                                                     산재보험
//                                                   </span>
//                                                 )}
//                                               </td>
//                                               <td className="px-4 py-3 text-sm">
//                                                 {enrollment.acquisition_date &&
//                                                   new Date(
//                                                     enrollment.acquisition_date
//                                                   ).toLocaleDateString()}
//                                               </td>
//                                               <td className="px-4 py-3 text-sm">
//                                                 {enrollment.acquisition_reason_code === "01" &&
//                                                   "신규 취득"}
//                                                 {enrollment.acquisition_reason_code === "02" &&
//                                                   "재취득"}
//                                                 {enrollment.acquisition_reason_code !== "01" &&
//                                                   enrollment.acquisition_reason_code !== "02" &&
//                                                   enrollment.acquisition_reason_code}
//                                               </td>
//                                               <td className="px-4 py-3 text-sm">
//                                                 {enrollment.loss_date ? (
//                                                   <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
//                                                     상실 (
//                                                     {new Date(
//                                                       enrollment.loss_date
//                                                     ).toLocaleDateString()}
//                                                     )
//                                                   </span>
//                                                 ) : (
//                                                   <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
//                                                     가입 중
//                                                   </span>
//                                                 )}
//                                               </td>
//                                             </tr>
//                                           ))}
//                                           {(!enrollmentRecords[
//                                             `${worker.worker_id}-${selectedSite}`
//                                           ] ||
//                                             enrollmentRecords[`${worker.worker_id}-${selectedSite}`]
//                                               .length === 0) && (
//                                             <tr>
//                                               <td
//                                                 colSpan="4"
//                                                 className="px-6 py-10 text-center text-gray-500"
//                                               >
//                                                 <div className="flex flex-col items-center">
//                                                   <svg
//                                                     xmlns="http://www.w3.org/2000/svg"
//                                                     className="h-8 w-8 text-gray-300 mb-2"
//                                                     fill="none"
//                                                     viewBox="0 0 24 24"
//                                                     stroke="currentColor"
//                                                   >
//                                                     <path
//                                                       strokeLinecap="round"
//                                                       strokeLinejoin="round"
//                                                       strokeWidth="2"
//                                                       d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
//                                                     />
//                                                   </svg>
//                                                   가입 정보가 없습니다.
//                                                 </div>
//                                               </td>
//                                             </tr>
//                                           )}
//                                         </tbody>
//                                       </table>
//                                     </div>

//                                     <div className="mt-4 bg-yellow-50 border border-yellow-200 rounded-lg p-4">
//                                       <div className="flex items-start">
//                                         <svg
//                                           xmlns="http://www.w3.org/2000/svg"
//                                           className="h-5 w-5 text-yellow-500 mr-2 mt-0.5"
//                                           fill="none"
//                                           viewBox="0 0 24 24"
//                                           stroke="currentColor"
//                                         >
//                                           <path
//                                             strokeLinecap="round"
//                                             strokeLinejoin="round"
//                                             strokeWidth="2"
//                                             d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"
//                                           />
//                                         </svg>
//                                         <div>
//                                           <p className="text-yellow-800 font-medium mb-1">
//                                             주의: 고용 관계 변동 사항
//                                           </p>
//                                           <p className="text-yellow-700 text-sm">
//                                             근로자가 현장에 더 이상 출근하지 않는 경우 상실 처리가
//                                             필요합니다. 그렇지 않으면 계속해서 보험료가 부과됩니다.
//                                           </p>
//                                         </div>
//                                       </div>
//                                     </div>
//                                   </div>
//                                 </div>
//                               </td>
//                             </tr>
//                           )}
//                         </React.Fragment>
//                       );
//                     })
//                   ) : (
//                     <tr>
//                       <td colSpan="5" className="px-6 py-12 text-center">
//                         <div className="flex flex-col items-center">
//                           <svg
//                             xmlns="http://www.w3.org/2000/svg"
//                             className="h-12 w-12 text-gray-300 mb-4"
//                             fill="none"
//                             viewBox="0 0 24 24"
//                             stroke="currentColor"
//                           >
//                             <path
//                               strokeLinecap="round"
//                               strokeLinejoin="round"
//                               strokeWidth="2"
//                               d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
//                             />
//                           </svg>
//                           <span className="text-gray-500 text-lg">
//                             {selectedSite
//                               ? searchTerm
//                                 ? "검색 결과가 없습니다."
//                                 : "유지 중인 근로자가 없습니다."
//                               : "공사현장을 선택해주세요."}
//                           </span>
//                         </div>
//                       </td>
//                     </tr>
//                   )}
//                 </tbody>
//               </table>
//             </div>
//           )}
//           {/* 디버깅 정보 (개발 중에만 사용) */}
//           {process.env.NODE_ENV === "development" && (
//             <div className="mt-4 p-2 bg-gray-100 text-xs text-gray-700 whitespace-pre-wrap font-mono">
//               <details>
//                 <summary>디버깅 정보</summary>
//                 <p>선택된 사이트: {selectedSite}</p>
//                 <p>
//                   연/월: {selectedYear}-{selectedMonth}
//                 </p>
//                 <p>workersHistory 키: {Object.keys(workersHistory).join(", ")}</p>
//               </details>
//             </div>
//           )}
//           {/* Loss candidates tab */}
//           {activeTab === 2 && (
//             <div className="overflow-x-auto">
//               <table className="min-w-full divide-y divide-gray-200">
//                 <thead className="bg-gray-50">
//                   <tr>
//                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-12">
//                       No.
//                     </th>
//                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                       근로자 정보
//                     </th>
//                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                       근무 이력
//                     </th>
//                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                       4대보험 가입 상태
//                     </th>
//                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-32">
//                       액션
//                     </th>
//                   </tr>
//                 </thead>
//                 <tbody className="bg-white divide-y divide-gray-200">
//                   {filterWorkers(inactiveWorkers).length > 0 ? (
//                     filterWorkers(inactiveWorkers).map((worker, index) => {
//                       const yearMonth = `${selectedYear}-${selectedMonth}`;
//                       const workHistory =
//                         workersHistory[`${worker.worker_id}-${selectedSite}-${yearMonth}`] || {};

//                       return (
//                         <React.Fragment key={worker.worker_id}>
//                           <tr
//                             className={`${
//                               selectedWorkerId === worker.worker_id
//                                 ? "bg-blue-50"
//                                 : "hover:bg-gray-50"
//                             } cursor-pointer transition-colors`}
//                             onClick={() => setSelectedWorkerId(worker.worker_id)}
//                           >
//                             <td className="px-4 py-4 whitespace-nowrap text-sm text-gray-500">
//                               {index + 1}
//                             </td>
//                             <td className="px-4 py-4">
//                               <div className="flex items-center">
//                                 <div className="flex-shrink-0 h-10 w-10 bg-gray-200 rounded-full flex items-center justify-center">
//                                   <span className="text-gray-600 font-medium">
//                                     {worker.name ? worker.name.charAt(0) : "?"}
//                                   </span>
//                                 </div>
//                                 <div className="ml-4">
//                                   <div className="text-sm font-medium text-gray-900">
//                                     {worker.name}
//                                   </div>
//                                   <div className="text-sm text-gray-500">
//                                     {formatResidentNumber(worker.resident_number)}
//                                   </div>
//                                   <div className="text-sm text-gray-500 flex items-center mt-1">
//                                     <span className="bg-gray-100 text-gray-600 px-2 py-0.5 rounded text-xs">
//                                       {worker.jobName || "직종 미지정"}
//                                     </span>
//                                     <span className="mx-1">•</span>
//                                     <span>{worker.age || "?"}세</span>
//                                   </div>
//                                 </div>
//                               </div>
//                             </td>
//                             <td className="px-4 py-4">
//                               <div className="grid grid-cols-2 gap-x-4 gap-y-1">
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">전월 근무: </span>
//                                   <span className="font-medium">
//                                     {workHistory.previousMonthWorkDays || 0}일
//                                   </span>
//                                   <span className="text-gray-400"> / </span>
//                                   <span className="font-medium">
//                                     {workHistory.previousMonthWorkHours || 0}시간
//                                   </span>
//                                 </div>
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">당월 근무: </span>
//                                   <span className="font-medium text-red-500">0일</span>
//                                   <span className="text-gray-400"> / </span>
//                                   <span className="font-medium text-red-500">0시간</span>
//                                 </div>
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">첫 근무일: </span>
//                                   <span className="font-medium">
//                                     {workHistory.firstWorkDate
//                                       ? new Date(workHistory.firstWorkDate).toLocaleDateString()
//                                       : "기록 없음"}
//                                   </span>
//                                 </div>
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">당월 급여: </span>
//                                   <span className="font-medium text-red-500">0원</span>
//                                 </div>
//                               </div>
//                             </td>
//                             <td className="px-4 py-4">
//                               <div className="grid grid-cols-2 gap-2">
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">국민연금: </span>
//                                   {isEnrolled(
//                                     worker.worker_id,
//                                     selectedSite,
//                                     "national_pension"
//                                   ) ? (
//                                     <span className="px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
//                                       상실 필요
//                                     </span>
//                                   ) : (
//                                     <span className="px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
//                                       미가입
//                                     </span>
//                                   )}
//                                 </div>
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">건강보험: </span>
//                                   {isEnrolled(
//                                     worker.worker_id,
//                                     selectedSite,
//                                     "health_insurance"
//                                   ) ? (
//                                     <span className="px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
//                                       상실 필요
//                                     </span>
//                                   ) : (
//                                     <span className="px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
//                                       미가입
//                                     </span>
//                                   )}
//                                 </div>
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">고용보험: </span>
//                                   {isEnrolled(
//                                     worker.worker_id,
//                                     selectedSite,
//                                     "employment_insurance"
//                                   ) ? (
//                                     <span className="px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
//                                       상실 필요
//                                     </span>
//                                   ) : (
//                                     <span className="px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
//                                       미가입
//                                     </span>
//                                   )}
//                                 </div>
//                                 <div className="text-sm">
//                                   <span className="text-gray-500">산재보험: </span>
//                                   {isEnrolled(
//                                     worker.worker_id,
//                                     selectedSite,
//                                     "industrial_accident"
//                                   ) ? (
//                                     <span className="px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
//                                       상실 필요
//                                     </span>
//                                   ) : (
//                                     <span className="px-2 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
//                                       미가입
//                                     </span>
//                                   )}
//                                 </div>
//                               </div>
//                             </td>
//                             <td className="px-4 py-4 whitespace-nowrap text-right text-sm font-medium">
//                               <button
//                                 onClick={(e) => handleLoss(worker.worker_id, e)}
//                                 className="inline-flex items-center px-3 py-1.5 bg-red-600 text-white text-xs font-medium rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition"
//                               >
//                                 <svg
//                                   xmlns="http://www.w3.org/2000/svg"
//                                   className="h-4 w-4 mr-1"
//                                   fill="none"
//                                   viewBox="0 0 24 24"
//                                   stroke="currentColor"
//                                 >
//                                   <path
//                                     strokeLinecap="round"
//                                     strokeLinejoin="round"
//                                     strokeWidth="2"
//                                     d="M6 18L18 6M6 6l12 12"
//                                   />
//                                 </svg>
//                                 상실 처리
//                               </button>
//                             </td>
//                           </tr>

//                           {/* Detail panel for loss candidates */}
//                           {selectedWorkerId === worker.worker_id && showDetail && (
//                             <tr>
//                               <td colSpan="5" className="p-0">
//                                 <div className="border-t border-b border-blue-200 bg-blue-50 p-6">
//                                   <div className="flex justify-between items-start mb-4">
//                                     <h3 className="text-lg font-semibold text-blue-800">
//                                       {worker.name} - 상실 처리 정보
//                                     </h3>
//                                     <button
//                                       onClick={() => setSelectedWorkerId(null)}
//                                       className="text-gray-400 hover:text-gray-600"
//                                     >
//                                       <svg
//                                         xmlns="http://www.w3.org/2000/svg"
//                                         className="h-6 w-6"
//                                         fill="none"
//                                         viewBox="0 0 24 24"
//                                         stroke="currentColor"
//                                       >
//                                         <path
//                                           strokeLinecap="round"
//                                           strokeLinejoin="round"
//                                           strokeWidth="2"
//                                           d="M6 18L18 6M6 6l12 12"
//                                         />
//                                       </svg>
//                                     </button>
//                                   </div>

//                                   <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
//                                     {/* 근로자 정보 */}
//                                     <div className="bg-white p-4 rounded-lg shadow-sm">
//                                       <h4 className="text-md font-semibold text-blue-700 mb-3 pb-2 border-b">
//                                         근로자 정보
//                                       </h4>
//                                       <div className="space-y-3 text-sm">
//                                         <div className="flex">
//                                           <span className="font-medium w-28">이름:</span>
//                                           <span>{worker.name}</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">주민등록번호:</span>
//                                           <span>
//                                             {formatResidentNumber(worker.resident_number)}
//                                           </span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">연락처:</span>
//                                           <span>{formatPhoneNumber(worker.contact_number)}</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">나이:</span>
//                                           <span>{worker.age}세</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">직종:</span>
//                                           <span>{worker.jobName || "미지정"}</span>
//                                         </div>
//                                       </div>
//                                     </div>

//                                     {/* 근무 이력 정보 */}
//                                     <div className="bg-white p-4 rounded-lg shadow-sm">
//                                       <h4 className="text-md font-semibold text-blue-700 mb-3 pb-2 border-b">
//                                         근무 이력
//                                       </h4>
//                                       <div className="space-y-3 text-sm">
//                                         <div className="flex">
//                                           <span className="font-medium w-28">첫 근무일:</span>
//                                           <span>
//                                             {workHistory.firstWorkDate
//                                               ? new Date(
//                                                   workHistory.firstWorkDate
//                                                 ).toLocaleDateString()
//                                               : "없음"}
//                                           </span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">전월 근무일수:</span>
//                                           <span>{workHistory.previousMonthWorkDays || 0}일</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">전월 근무시간:</span>
//                                           <span>{workHistory.previousMonthWorkHours || 0}시간</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">당월 근무일수:</span>
//                                           <span className="text-red-500 font-medium">0일</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28">당월 근무시간:</span>
//                                           <span className="text-red-500 font-medium">0시간</span>
//                                         </div>
//                                         <div className="flex">
//                                           <span className="font-medium w-28 font-medium">
//                                             당월 미등록:
//                                           </span>
//                                           <span className="text-red-500 font-medium">
//                                             상실 대상
//                                           </span>
//                                         </div>
//                                       </div>
//                                     </div>
//                                   </div>

//                                   <div className="mt-6">
//                                     <h4 className="text-md font-semibold text-blue-700 mb-3 pb-2 border-b">
//                                       4대보험 가입 정보
//                                     </h4>
//                                     <div className="bg-white border rounded-lg shadow-sm">
//                                       <table className="min-w-full divide-y divide-gray-200">
//                                         <thead className="bg-gray-50">
//                                           <tr>
//                                             <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                                               보험 종류
//                                             </th>
//                                             <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                                               가입일
//                                             </th>
//                                             <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                                               가입사유
//                                             </th>
//                                             <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
//                                               상태
//                                             </th>
//                                           </tr>
//                                         </thead>
//                                         <tbody className="divide-y divide-gray-200">
//                                           {enrollmentRecords[
//                                             `${worker.worker_id}-${selectedSite}`
//                                           ]?.map((enrollment, idx) => (
//                                             <tr key={idx} className="hover:bg-gray-50">
//                                               <td className="px-4 py-3 text-sm">
//                                                 {enrollment.insurance_type ===
//                                                   "national_pension" && (
//                                                   <span className="flex items-center">
//                                                     <span className="w-2 h-2 bg-blue-500 rounded-full mr-2"></span>
//                                                     국민연금
//                                                   </span>
//                                                 )}
//                                                 {enrollment.insurance_type ===
//                                                   "health_insurance" && (
//                                                   <span className="flex items-center">
//                                                     <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
//                                                     건강보험
//                                                   </span>
//                                                 )}
//                                                 {enrollment.insurance_type ===
//                                                   "employment_insurance" && (
//                                                   <span className="flex items-center">
//                                                     <span className="w-2 h-2 bg-purple-500 rounded-full mr-2"></span>
//                                                     고용보험
//                                                   </span>
//                                                 )}
//                                                 {enrollment.insurance_type ===
//                                                   "industrial_accident" && (
//                                                   <span className="flex items-center">
//                                                     <span className="w-2 h-2 bg-orange-500 rounded-full mr-2"></span>
//                                                     산재보험
//                                                   </span>
//                                                 )}
//                                               </td>
//                                               <td className="px-4 py-3 text-sm">
//                                                 {enrollment.acquisition_date &&
//                                                   new Date(
//                                                     enrollment.acquisition_date
//                                                   ).toLocaleDateString()}
//                                               </td>
//                                               <td className="px-4 py-3 text-sm">
//                                                 {enrollment.acquisition_reason_code === "01" &&
//                                                   "신규 취득"}
//                                                 {enrollment.acquisition_reason_code === "02" &&
//                                                   "재취득"}
//                                                 {enrollment.acquisition_reason_code !== "01" &&
//                                                   enrollment.acquisition_reason_code !== "02" &&
//                                                   enrollment.acquisition_reason_code}
//                                               </td>
//                                               <td className="px-4 py-3 text-sm">
//                                                 {enrollment.loss_date ? (
//                                                   <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
//                                                     상실 (
//                                                     {new Date(
//                                                       enrollment.loss_date
//                                                     ).toLocaleDateString()}
//                                                     )
//                                                   </span>
//                                                 ) : (
//                                                   <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
//                                                     가입 중 (상실 필요)
//                                                   </span>
//                                                 )}
//                                               </td>
//                                             </tr>
//                                           ))}
//                                           {(!enrollmentRecords[
//                                             `${worker.worker_id}-${selectedSite}`
//                                           ] ||
//                                             enrollmentRecords[`${worker.worker_id}-${selectedSite}`]
//                                               .length === 0) && (
//                                             <tr>
//                                               <td
//                                                 colSpan="4"
//                                                 className="px-6 py-10 text-center text-gray-500"
//                                               >
//                                                 <div className="flex flex-col items-center">
//                                                   <svg
//                                                     xmlns="http://www.w3.org/2000/svg"
//                                                     className="h-8 w-8 text-gray-300 mb-2"
//                                                     fill="none"
//                                                     viewBox="0 0 24 24"
//                                                     stroke="currentColor"
//                                                   >
//                                                     <path
//                                                       strokeLinecap="round"
//                                                       strokeLinejoin="round"
//                                                       strokeWidth="2"
//                                                       d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
//                                                     />
//                                                   </svg>
//                                                   가입 정보가 없습니다.
//                                                 </div>
//                                               </td>
//                                             </tr>
//                                           )}
//                                         </tbody>
//                                       </table>
//                                     </div>

//                                     <div className="mt-4 bg-yellow-50 border border-yellow-200 rounded-lg p-4">
//                                       <div className="flex items-start">
//                                         <svg
//                                           xmlns="http://www.w3.org/2000/svg"
//                                           className="h-5 w-5 text-yellow-500 mr-2 mt-0.5"
//                                           fill="none"
//                                           viewBox="0 0 24 24"
//                                           stroke="currentColor"
//                                         >
//                                           <path
//                                             strokeLinecap="round"
//                                             strokeLinejoin="round"
//                                             strokeWidth="2"
//                                             d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"
//                                           />
//                                         </svg>
//                                         <div>
//                                           <p className="text-yellow-800 font-medium mb-1">
//                                             주의: 당월 근무 기록이 없는 근로자입니다
//                                           </p>
//                                           <p className="text-yellow-700 text-sm">
//                                             실제로 현장에 더 이상 출근하지 않는 경우 상실 처리가
//                                             필요합니다. 상실일이 속한 달의 전월까지 보험료가
//                                             부과되므로, 가능한 빨리 상실 처리하는 것이 좋습니다.
//                                           </p>
//                                         </div>
//                                       </div>
//                                     </div>
//                                   </div>
//                                 </div>
//                               </td>
//                             </tr>
//                           )}
//                         </React.Fragment>
//                       );
//                     })
//                   ) : (
//                     <tr>
//                       <td colSpan="5" className="px-6 py-12 text-center">
//                         <div className="flex flex-col items-center">
//                           <svg
//                             xmlns="http://www.w3.org/2000/svg"
//                             className="h-12 w-12 text-gray-300 mb-4"
//                             fill="none"
//                             viewBox="0 0 24 24"
//                             stroke="currentColor"
//                           >
//                             <path
//                               strokeLinecap="round"
//                               strokeLinejoin="round"
//                               strokeWidth="2"
//                               d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
//                             />
//                           </svg>
//                           <span className="text-gray-500 text-lg">
//                             {selectedSite
//                               ? searchTerm
//                                 ? "검색 결과가 없습니다."
//                                 : "상실 대상자가 없습니다."
//                               : "공사현장을 선택해주세요."}
//                           </span>
//                         </div>
//                       </td>
//                     </tr>
//                   )}
//                 </tbody>
//               </table>
//             </div>
//           )}
//         </div>
//         {/* 디버깅 정보 (개발 중에만 사용) */}
//         {process.env.NODE_ENV === "development" && (
//           <div className="mt-4 p-2 bg-gray-100 text-xs text-gray-700 whitespace-pre-wrap font-mono">
//             <details>
//               <summary>디버깅 정보</summary>
//               <p>선택된 사이트: {selectedSite}</p>
//               <p>
//                 연/월: {selectedYear}-{selectedMonth}
//               </p>
//               <p>workersHistory 키: {Object.keys(workersHistory).join(", ")}</p>
//             </details>
//           </div>
//         )}
//         {/* Footer/Action buttons */}
//         <div className="flex justify-end space-x-4 mt-6">
//           <Link
//             href="/daily-report"
//             className="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition shadow-sm flex items-center"
//           >
//             <svg
//               xmlns="http://www.w3.org/2000/svg"
//               className="h-4 w-4 mr-2"
//               fill="none"
//               viewBox="0 0 24 24"
//               stroke="currentColor"
//             >
//               <path
//                 strokeLinecap="round"
//                 strokeLinejoin="round"
//                 strokeWidth="2"
//                 d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
//               />
//             </svg>
//             급여명세서
//           </Link>
//           <button
//             className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition shadow-sm flex items-center"
//             onClick={handleSaveAll}
//           >
//             <svg
//               xmlns="http://www.w3.org/2000/svg"
//               className="h-4 w-4 mr-2"
//               fill="none"
//               viewBox="0 0 24 24"
//               stroke="currentColor"
//             >
//               <path
//                 strokeLinecap="round"
//                 strokeLinejoin="round"
//                 strokeWidth="2"
//                 d="M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4"
//               />
//             </svg>
//             모든 설정 저장
//           </button>
//         </div>
//       </div>
//     </RoleGuard>
//   );
// }

// export default InsuranceEnrollmentsPage;

// // "use client";
// // import React, { useEffect } from "react";
// // import { supabase } from "@/lib/supabase"; // supabase 클라이언트 가져오기 수정
// // import { useAuthStore } from "@/lib/store/authStore";
// // import RoleGuard from "@/components/RoleGuard";
// // import { ToastContainer, toast } from "react-toastify";
// // import { formatResidentNumber, formatPhoneNumber } from "@/lib/utils/formattingUtils";
// // import Link from "next/link";
// // import useInsuranceStore from "@/lib/store/useInsuranceStore";

// // function InsuranceEnrollmentsPage() {
// //   const { user } = useAuthStore();

// //   // Get state and functions from the store
// //   const {
// //     // State
// //     sites,
// //     selectedSite,
// //     selectedYear,
// //     selectedMonth,
// //     activeTab,
// //     isLoading,
// //     selectedWorkerId,
// //     showDetail,

// //     registeredWorkers,
// //     activeWorkers,
// //     inactiveWorkers,
// //     workersHistory,

// //     insuranceStatus,
// //     manualSettings,
// //     enrollmentRecords,

// //     // Actions
// //     initialize,
// //     setSelectedSite,
// //     setSelectedYearMonth,
// //     setActiveTab,
// //     setSelectedWorkerId,

// //     // Filter functions
// //     getNewEnrollmentCandidateWorkers,
// //     getActiveEnrollmentWorkers,
// //     getLossEnrollmentCandidateWorkers,

// //     // Insurance operations
// //     handleInsuranceAcquisition,
// //     handleInsuranceLoss,
// //     handleInsuranceStatusChange,
// //     handleReasonUpdate,
// //     loadAllWorkersData,

// //     // Utility functions
// //     getStatusStyle,
// //     getStatusText,
// //     isEnrolled,
// //     getEffectiveStatus,
// //     formatResidentNumber: formatResidentNumberFromStore,
// //     formatPhoneNumber: formatPhoneNumberFromStore,
// //   } = useInsuranceStore();

// //   // Initialize store when component mounts
// //   useEffect(() => {
// //     if (user) {
// //       initialize(user.id);
// //     }
// //   }, [user, initialize]);

// //   // Handle site selection change
// //   const handleSiteChange = (e) => {
// //     setSelectedSite(e.target.value);
// //   };

// //   // Handle year and month change
// //   const handleYearMonthChange = (e) => {
// //     const [year, month] = e.target.value.split("-");
// //     setSelectedYearMonth(year, month);
// //   };

// //   // Handle worker selection
// //   const handleWorkerSelect = (workerId) => {
// //     setSelectedWorkerId(workerId);
// //   };

// //   // Handle acquisition with toast feedback
// //   const handleAcquisition = async (workerId, e) => {
// //     if (e) {
// //       e.stopPropagation();
// //     }
// //     const result = await handleInsuranceAcquisition(workerId);
// //     if (result.success) {
// //       toast.success(result.message);
// //     } else {
// //       toast.error(result.message);
// //     }
// //   };

// //   // Handle loss with toast feedback
// //   const handleLoss = async (workerId, e) => {
// //     if (e) {
// //       e.stopPropagation();
// //     }
// //     const result = await handleInsuranceLoss(workerId);
// //     if (result.success) {
// //       toast.success(result.message);
// //     } else {
// //       toast.error(result.message);
// //     }
// //   };

// //   // Handle status change with toast feedback
// //   const handleStatusChange = async (workerId, insuranceType, newStatus, e) => {
// //     if (e) {
// //       e.stopPropagation();
// //     }
// //     const result = await handleInsuranceStatusChange(workerId, insuranceType, newStatus);
// //     if (result.success) {
// //       toast.success(result.message);
// //     } else {
// //       toast.error(result.message);
// //     }
// //   };

// //   // Handle reason update with toast feedback
// //   const handleReason = async (workerId, reason, e) => {
// //     if (e) {
// //       e.stopPropagation();
// //     }
// //     const result = await handleReasonUpdate(workerId, reason);
// //     if (result.success) {
// //       toast.success(result.message);
// //     } else {
// //       toast.error(result.message);
// //     }
// //   };

// //   // 개선된 handleSaveAll 함수
// //   // 개선된 handleSaveAll 함수
// //   // 최종 개선된 handleSaveAll 함수 - 테이블 구조에 맞게 수정
// //   const handleSaveAll = async () => {
// //     console.log("[DEBUG] 모든 설정 저장 버튼 클릭됨");
// //     try {
// //       // 현재 상태 가져오기
// //       const { selectedSite, selectedYear, selectedMonth, manualSettings, insuranceStatus } =
// //         useInsuranceStore.getState();

// //       console.log("[DEBUG] 저장할 수동 설정:", manualSettings);

// //       // 선택된 년/월
// //       const yearMonth = `${selectedYear}-${selectedMonth}`;

// //       // 모든 근로자 ID 가져오기 (등록된 근로자, 활성, 비활성 모두 포함)
// //       const allWorkerIds = [
// //         ...registeredWorkers.map((w) => w.worker_id),
// //         ...activeWorkers.map((w) => w.worker_id),
// //         ...inactiveWorkers.map((w) => w.worker_id),
// //       ].filter((id, index, self) => self.indexOf(id) === index); // 중복 제거

// //       console.log("[DEBUG] 저장 대상 근로자 수:", allWorkerIds.length);

// //       if (allWorkerIds.length === 0) {
// //         toast("저장할 근로자가 없습니다.");
// //         return;
// //       }

// //       // 처리 결과 추적
// //       let successCount = 0;
// //       let errorCount = 0;

// //       // 각 근로자에 대해 설정 저장
// //       for (const workerId of allWorkerIds) {
// //         console.log(`[DEBUG] 근로자 ID ${workerId} 설정 저장 중...`);

// //         try {
// //           // 수동 설정이 있으면 사용하고, 없으면 자동 설정으로 진행
// //           const hasManualSettings = manualSettings[workerId] !== undefined;
// //           const workerStatus = insuranceStatus[workerId] || {
// //             nationalPension: { required: false },
// //             healthInsurance: { required: false },
// //             employmentInsurance: { required: true },
// //             industrialAccident: { required: true },
// //           };

// //           // 근로자 이력 데이터 가져오기
// //           const workerHistory = workersHistory[workerId] || {};

// //           // 저장할 설정 준비
// //           const settingsToSave = {
// //             worker_id: parseInt(workerId),
// //             site_id: selectedSite,
// //             year_month: yearMonth,
// //             // 상태 필드 설정 (수동 설정 또는 자동 설정)
// //             national_pension_status: hasManualSettings
// //               ? manualSettings[workerId].national_pension_status || "auto_exempted"
// //               : workerStatus.nationalPension?.required
// //               ? "auto_required"
// //               : "auto_exempted",

// //             health_insurance_status: hasManualSettings
// //               ? manualSettings[workerId].health_insurance_status || "auto_exempted"
// //               : workerStatus.healthInsurance?.required
// //               ? "auto_required"
// //               : "auto_exempted",

// //             employment_insurance_status: hasManualSettings
// //               ? manualSettings[workerId].employment_insurance_status || "auto_required"
// //               : workerStatus.employmentInsurance?.required
// //               ? "auto_required"
// //               : "auto_exempted",

// //             industrial_accident_status: hasManualSettings
// //               ? manualSettings[workerId].industrial_accident_status || "auto_required"
// //               : "auto_required",

// //             // 추가 필드
// //             manual_reason: hasManualSettings ? manualSettings[workerId].manual_reason || "" : "",

// //             // 근무 이력 데이터
// //             first_work_date: workerHistory.firstWorkDate || null,
// //             previous_month_work_days: workerHistory.previousMonthWorkDays || 0,
// //             previous_month_work_hours: workerHistory.previousMonthWorkHours || 0,
// //             current_month_work_days: workerHistory.currentMonthWorkDays || 0,
// //             current_month_work_hours: workerHistory.currentMonthWorkHours || 0,

// //             // 시스템 필드
// //             created_at: new Date().toISOString(),
// //             updated_at: new Date().toISOString(),
// //           };

// //           // 기존 레코드가 있는지 확인
// //           const { data: existingRecord, error: checkError } = await supabase
// //             .from("insurance_enrollments")
// //             .select("enrollment_id")
// //             .eq("worker_id", settingsToSave.worker_id)
// //             .eq("site_id", settingsToSave.site_id)
// //             .eq("year_month", settingsToSave.year_month)
// //             .maybeSingle();

// //           if (checkError) {
// //             console.error(`[DEBUG] 기존 레코드 확인 오류:`, checkError);
// //             errorCount++;
// //             continue;
// //           }

// //           let result;
// //           if (existingRecord) {
// //             // 기존 레코드 업데이트
// //             result = await supabase
// //               .from("insurance_enrollments")
// //               .update(settingsToSave)
// //               .eq("enrollment_id", existingRecord.enrollment_id);
// //           } else {
// //             // 새 레코드 삽입
// //             result = await supabase.from("insurance_enrollments").insert(settingsToSave);
// //           }

// //           if (result.error) {
// //             console.error(`[DEBUG] 근로자 ID ${workerId} 설정 저장 오류:`, result.error);
// //             errorCount++;
// //           } else {
// //             console.log(`[DEBUG] 근로자 ID ${workerId} 설정 저장 성공`);
// //             successCount++;
// //           }
// //         } catch (error) {
// //           console.error(`[DEBUG] 근로자 ID ${workerId} 설정 저장 중 예외 발생:`, error);
// //           errorCount++;
// //         }
// //       }

// //       // 결과 출력
// //       if (errorCount === 0) {
// //         toast.success(`${successCount}개의 설정이 저장되었습니다.`);
// //       } else if (successCount === 0) {
// //         toast.error(`저장 실패: ${errorCount}개의 오류가 발생했습니다.`);
// //       } else {
// //         toast.warning(`${successCount}개 저장 성공, ${errorCount}개 저장 실패`);
// //       }

// //       // 데이터 다시 로드
// //       await loadAllWorkersData();
// //     } catch (error) {
// //       console.error("[DEBUG] 설정 저장 중 오류 발생:", error);
// //       toast.error("설정 저장 중 오류가 발생했습니다.");
// //     }
// //   };

// //   // Handle getting manual setting reason
// //   const getManualReason = (workerId) => {
// //     return manualSettings[workerId]?.manual_reason || "";
// //   };

// //   // Handle updating manual reason in UI (before saving)
// //   const updateManualReasonUI = (workerId, reason) => {
// //     const updatedSettings = { ...manualSettings };
// //     if (!updatedSettings[workerId]) {
// //       updatedSettings[workerId] = {
// //         national_pension_status: getEffectiveStatus(workerId, "national_pension"),
// //         health_insurance_status: getEffectiveStatus(workerId, "health_insurance"),
// //         employment_insurance_status: getEffectiveStatus(workerId, "employment_insurance"),
// //         industrial_accident_status: getEffectiveStatus(workerId, "industrial_accident"),
// //         manual_reason: reason,
// //       };
// //     } else {
// //       updatedSettings[workerId].manual_reason = reason;
// //     }

// //     handleReasonUpdate(workerId, reason);
// //   };

// //   return (
// //     <RoleGuard requiredPermission="EDIT_INSURANCE">
// //       <div className="space-y-6">
// //         {isLoading && (
// //           <div className="fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 z-50">
// //             <div className="animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-blue-500"></div>
// //             <span className="ml-3 text-white">처리 중...</span>
// //           </div>
// //         )}

// //         {/* 헤더 부분 */}
// //         <div className="flex justify-between items-center">
// //           <h1 className="text-2xl font-bold">4대보험 관리</h1>
// //           <div className="flex items-center gap-2">
// //             <select
// //               className="px-3 py-2 border border-gray-300 rounded bg-white"
// //               value={selectedSite}
// //               onChange={handleSiteChange}
// //             >
// //               <option value="">공사현장 선택</option>
// //               {sites.map((site) => (
// //                 <option key={site.site_id} value={site.site_id}>
// //                   {site.site_name}
// //                 </option>
// //               ))}
// //             </select>

// //             <input
// //               type="month"
// //               className="px-3 py-2 border border-gray-300 rounded bg-white"
// //               value={`${selectedYear}-${selectedMonth}`}
// //               onChange={handleYearMonthChange}
// //             />

// //             <Link
// //               href="/daily-report"
// //               className="px-3 py-2 bg-gray-200 text-gray-700 rounded hover:bg-gray-300"
// //             >
// //               일용근로자 급여명세서
// //             </Link>
// //           </div>
// //         </div>

// //         {/* 설명 섹션 */}
// //         <div className="bg-blue-50 p-4 rounded-lg">
// //           <h2 className="text-lg font-semibold text-blue-800 mb-2">4대보험 적용 판단 안내</h2>
// //           <ul className="list-disc list-inside space-y-1 text-sm text-blue-800">
// //             <li>
// //               국민연금: 60세 이하 근로자 중 월급여 220만원 이상이거나 월 8일 이상 또는 월 60시간
// //               이상 근무한 경우
// //             </li>
// //             <li>건강보험: 월 60시간 이상 근무한 경우</li>
// //             <li>
// //               고용보험: 일용근로자는 근로일수 및 시간 상관없이 모두 적용 (65세 이상은 특례 적용)
// //             </li>
// //             <li>산재보험: 모든 근로자 당연 적용</li>
// //             <li>자동 판단 결과를 확인하고, 필요시 수동으로 적용 여부를 조정할 수 있습니다.</li>
// //           </ul>
// //         </div>

// //         {/* 탭 영역 */}
// //         <div className="mt-4">
// //           {/* 탭 헤더 */}
// //           <div className="flex border-b">
// //             <button
// //               className={`py-2 px-4 font-medium ${
// //                 activeTab === 0
// //                   ? "border-b-2 border-blue-500 text-blue-600"
// //                   : "text-gray-500 hover:text-gray-700"
// //               }`}
// //               onClick={() => setActiveTab(0)}
// //             >
// //               신규 가입 대상자 ({getNewEnrollmentCandidateWorkers().length})
// //             </button>
// //             <button
// //               className={`py-2 px-4 font-medium ${
// //                 activeTab === 1
// //                   ? "border-b-2 border-blue-500 text-blue-600"
// //                   : "text-gray-500 hover:text-gray-700"
// //               }`}
// //               onClick={() => setActiveTab(1)}
// //             >
// //               유지 중인 근로자 ({getActiveEnrollmentWorkers().length})
// //             </button>
// //             <button
// //               className={`py-2 px-4 font-medium ${
// //                 activeTab === 2
// //                   ? "border-b-2 border-blue-500 text-blue-600"
// //                   : "text-gray-500 hover:text-gray-700"
// //               }`}
// //               onClick={() => setActiveTab(2)}
// //             >
// //               상실 대상자 ({getLossEnrollmentCandidateWorkers().length})
// //             </button>
// //           </div>

// //           {/* 신규 가입 대상자 탭 */}
// //           <div className={activeTab === 0 ? "block" : "hidden"}>
// //             <div className="overflow-x-auto mt-4">
// //               <table className="min-w-full divide-y divide-gray-200 border">
// //                 <thead className="bg-gray-50">
// //                   <tr>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       No.
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       이름
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       주민등록번호
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       나이
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       전월 근무
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       당월 근무
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       국민연금
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       건강보험
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       고용보험
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       산재보험
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       액션
// //                     </th>
// //                   </tr>
// //                 </thead>
// //                 <tbody className="bg-white divide-y divide-gray-200">
// //                   {getNewEnrollmentCandidateWorkers().length > 0 ? (
// //                     getNewEnrollmentCandidateWorkers().map((worker, index) => {
// //                       const workHistory = workersHistory[worker.worker_id] || {};

// //                       return (
// //                         <React.Fragment key={worker.worker_id}>
// //                           <tr
// //                             className={`${
// //                               selectedWorkerId === worker.worker_id
// //                                 ? "bg-blue-50"
// //                                 : "hover:bg-gray-50"
// //                             } cursor-pointer`}
// //                             onClick={() => handleWorkerSelect(worker.worker_id)}
// //                           >
// //                             <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
// //                               {index + 1}
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap">
// //                               <div className="text-sm font-medium text-gray-900">{worker.name}</div>
// //                               <div className="text-xs text-gray-500">{worker.jobName}</div>
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
// //                               {formatResidentNumber(worker.resident_number)}
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
// //                               {worker.age}세
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap text-sm">
// //                               <div>
// //                                 {workHistory.previousMonthWorkDays || 0}일 /{" "}
// //                                 {workHistory.previousMonthWorkHours || 0}시간
// //                               </div>
// //                               <div className="text-xs text-gray-500">
// //                                 {workHistory.firstWorkDate
// //                                   ? `첫 근무일: ${new Date(
// //                                       workHistory.firstWorkDate
// //                                     ).toLocaleDateString()}`
// //                                   : "근무 기록 없음"}
// //                               </div>
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap text-sm">
// //                               <div>
// //                                 {workHistory.currentMonthWorkDays || 0}일 /{" "}
// //                                 {workHistory.currentMonthWorkHours || 0}시간
// //                               </div>
// //                               <div className="text-xs text-gray-500">
// //                                 {workHistory.monthlyWage
// //                                   ? `총 급여: ${workHistory.monthlyWage.toLocaleString()}원`
// //                                   : "0원"}
// //                               </div>
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap">
// //                               <span
// //                                 className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusStyle(
// //                                   getEffectiveStatus(worker.worker_id, "national_pension")
// //                                 )}`}
// //                               >
// //                                 {getStatusText(
// //                                   getEffectiveStatus(worker.worker_id, "national_pension")
// //                                 )}
// //                               </span>
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap">
// //                               <span
// //                                 className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusStyle(
// //                                   getEffectiveStatus(worker.worker_id, "health_insurance")
// //                                 )}`}
// //                               >
// //                                 {getStatusText(
// //                                   getEffectiveStatus(worker.worker_id, "health_insurance")
// //                                 )}
// //                               </span>
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap">
// //                               <span
// //                                 className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusStyle(
// //                                   getEffectiveStatus(worker.worker_id, "employment_insurance")
// //                                 )}`}
// //                               >
// //                                 {getStatusText(
// //                                   getEffectiveStatus(worker.worker_id, "employment_insurance")
// //                                 )}
// //                               </span>
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap">
// //                               <span
// //                                 className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusStyle(
// //                                   getEffectiveStatus(worker.worker_id, "industrial_accident")
// //                                 )}`}
// //                               >
// //                                 {getStatusText(
// //                                   getEffectiveStatus(worker.worker_id, "industrial_accident")
// //                                 )}
// //                               </span>
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap">
// //                               <button
// //                                 onClick={(e) => handleAcquisition(worker.worker_id, e)}
// //                                 className="px-3 py-1 bg-blue-500 text-white text-xs rounded hover:bg-blue-600"
// //                               >
// //                                 가입 처리
// //                               </button>
// //                             </td>
// //                           </tr>

// //                           {/* 상세 정보 패널 */}
// //                           {selectedWorkerId === worker.worker_id && showDetail && (
// //                             <tr>
// //                               <td colSpan="11" className="px-8 py-4 bg-blue-50">
// //                                 <div className="border-t border-blue-200 pt-4">
// //                                   <h3 className="text-lg font-semibold text-blue-800 mb-4">
// //                                     {worker.name} - 4대보험 세부 정보
// //                                   </h3>

// //                                   <div className="grid grid-cols-2 gap-6">
// //                                     {/* 근로자 정보 */}
// //                                     <div>
// //                                       <h4 className="text-md font-semibold text-blue-700 mb-2">
// //                                         근로자 정보
// //                                       </h4>
// //                                       <div className="space-y-2 text-sm">
// //                                         <p>
// //                                           <span className="font-medium">이름:</span> {worker.name}
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">주민등록번호:</span>{" "}
// //                                           {formatResidentNumber(worker.resident_number)}
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">연락처:</span>{" "}
// //                                           {formatPhoneNumber(worker.contact_number)}
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">나이:</span> {worker.age}세
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">직종:</span>{" "}
// //                                           {worker.jobName}
// //                                         </p>
// //                                       </div>
// //                                     </div>

// //                                     {/* 근무 이력 정보 */}
// //                                     <div>
// //                                       <h4 className="text-md font-semibold text-blue-700 mb-2">
// //                                         근무 이력
// //                                       </h4>
// //                                       <div className="space-y-2 text-sm">
// //                                         <p>
// //                                           <span className="font-medium">첫 근무일:</span>{" "}
// //                                           {workHistory.firstWorkDate
// //                                             ? new Date(
// //                                                 workHistory.firstWorkDate
// //                                               ).toLocaleDateString()
// //                                             : "없음"}
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">전월 근무일수:</span>{" "}
// //                                           {workHistory.previousMonthWorkDays || 0}일
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">전월 근무시간:</span>{" "}
// //                                           {workHistory.previousMonthWorkHours || 0}시간
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">당월 근무일수:</span>{" "}
// //                                           {workHistory.currentMonthWorkDays || 0}일
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">당월 근무시간:</span>{" "}
// //                                           {workHistory.currentMonthWorkHours || 0}시간
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">당월 급여:</span>{" "}
// //                                           {(workHistory.monthlyWage || 0).toLocaleString()}원
// //                                         </p>
// //                                       </div>
// //                                     </div>
// //                                   </div>

// //                                   <div className="mt-6">
// //                                     <h4 className="text-md font-semibold text-blue-700 mb-2">
// //                                       4대보험 설정
// //                                     </h4>
// //                                     <div className="grid grid-cols-4 gap-4">
// //                                       {/* 국민연금 */}
// //                                       <div className="border rounded-lg p-4 bg-white">
// //                                         <h5 className="font-medium mb-2">국민연금</h5>
// //                                         <div className="space-y-2 mb-4">
// //                                           <p className="text-sm">
// //                                             <span className="font-medium">자동 판단:</span>{" "}
// //                                             {insuranceStatus[worker.worker_id]?.nationalPension
// //                                               ?.required ? (
// //                                               <span className="text-green-600">적용 대상</span>
// //                                             ) : (
// //                                               <span className="text-red-600">제외 대상</span>
// //                                             )}
// //                                           </p>
// //                                           <p className="text-sm">
// //                                             <span className="font-medium">사유:</span>{" "}
// //                                             {insuranceStatus[worker.worker_id]?.nationalPension
// //                                               ?.reason || "정보 없음"}
// //                                           </p>
// //                                         </div>
// //                                         <div className="flex space-x-2">
// //                                           <button
// //                                             onClick={(e) =>
// //                                               handleStatusChange(
// //                                                 worker.worker_id,
// //                                                 "national_pension",
// //                                                 "manual_required",
// //                                                 e
// //                                               )
// //                                             }
// //                                             className={`px-2 py-1 text-xs rounded ${
// //                                               getEffectiveStatus(
// //                                                 worker.worker_id,
// //                                                 "national_pension"
// //                                               ) === "manual_required"
// //                                                 ? "bg-blue-500 text-white"
// //                                                 : "bg-gray-200 text-gray-700 hover:bg-blue-100"
// //                                             }`}
// //                                           >
// //                                             수동 적용
// //                                           </button>
// //                                           <button
// //                                             className={`px-2 py-1 text-xs rounded ${
// //                                               getEffectiveStatus(
// //                                                 worker.worker_id,
// //                                                 "national_pension"
// //                                               ) === "manual_exempted"
// //                                                 ? "bg-blue-500 text-white"
// //                                                 : "bg-gray-200 text-gray-700 hover:bg-blue-100"
// //                                             }`}
// //                                             onClick={(e) =>
// //                                               handleStatusChange(
// //                                                 worker.worker_id,
// //                                                 "national_pension",
// //                                                 "manual_exempted",
// //                                                 e
// //                                               )
// //                                             }
// //                                           >
// //                                             수동 제외
// //                                           </button>
// //                                           <button
// //                                             className={`px-2 py-1 text-xs rounded ${
// //                                               getEffectiveStatus(
// //                                                 worker.worker_id,
// //                                                 "national_pension"
// //                                               ).startsWith("auto_")
// //                                                 ? "bg-blue-500 text-white"
// //                                                 : "bg-gray-200 text-gray-700 hover:bg-blue-100"
// //                                             }`}
// //                                             onClick={(e) =>
// //                                               handleStatusChange(
// //                                                 worker.worker_id,
// //                                                 "national_pension",
// //                                                 insuranceStatus[worker.worker_id]?.nationalPension
// //                                                   ?.required
// //                                                   ? "auto_required"
// //                                                   : "auto_exempted",
// //                                                 e
// //                                               )
// //                                             }
// //                                           >
// //                                             자동 설정
// //                                           </button>
// //                                         </div>
// //                                       </div>

// //                                       {/* 건강보험 */}
// //                                       <div className="border rounded-lg p-4 bg-white">
// //                                         <h5 className="font-medium mb-2">건강보험</h5>
// //                                         <div className="space-y-2 mb-4">
// //                                           <p className="text-sm">
// //                                             <span className="font-medium">자동 판단:</span>{" "}
// //                                             {insuranceStatus[worker.worker_id]?.healthInsurance
// //                                               ?.required ? (
// //                                               <span className="text-green-600">적용 대상</span>
// //                                             ) : (
// //                                               <span className="text-red-600">제외 대상</span>
// //                                             )}
// //                                           </p>
// //                                           <p className="text-sm">
// //                                             <span className="font-medium">사유:</span>{" "}
// //                                             {insuranceStatus[worker.worker_id]?.healthInsurance
// //                                               ?.reason || "정보 없음"}
// //                                           </p>
// //                                         </div>
// //                                         <div className="flex space-x-2">
// //                                           <button
// //                                             onClick={(e) =>
// //                                               handleStatusChange(
// //                                                 worker.worker_id,
// //                                                 "health_insurance",
// //                                                 "manual_required",
// //                                                 e
// //                                               )
// //                                             }
// //                                             className={`px-2 py-1 text-xs rounded ${
// //                                               getEffectiveStatus(
// //                                                 worker.worker_id,
// //                                                 "health_insurance"
// //                                               ) === "manual_required"
// //                                                 ? "bg-blue-500 text-white"
// //                                                 : "bg-gray-200 text-gray-700 hover:bg-blue-100"
// //                                             }`}
// //                                           >
// //                                             수동 적용
// //                                           </button>
// //                                           <button
// //                                             className={`px-2 py-1 text-xs rounded ${
// //                                               getEffectiveStatus(
// //                                                 worker.worker_id,
// //                                                 "health_insurance"
// //                                               ) === "manual_exempted"
// //                                                 ? "bg-blue-500 text-white"
// //                                                 : "bg-gray-200 text-gray-700 hover:bg-blue-100"
// //                                             }`}
// //                                             onClick={(e) =>
// //                                               handleStatusChange(
// //                                                 worker.worker_id,
// //                                                 "health_insurance",
// //                                                 "manual_exempted",
// //                                                 e
// //                                               )
// //                                             }
// //                                           >
// //                                             수동 제외
// //                                           </button>
// //                                           <button
// //                                             className={`px-2 py-1 text-xs rounded ${
// //                                               getEffectiveStatus(
// //                                                 worker.worker_id,
// //                                                 "health_insurance"
// //                                               ).startsWith("auto_")
// //                                                 ? "bg-blue-500 text-white"
// //                                                 : "bg-gray-200 text-gray-700 hover:bg-blue-100"
// //                                             }`}
// //                                             onClick={(e) =>
// //                                               handleStatusChange(
// //                                                 worker.worker_id,
// //                                                 "health_insurance",
// //                                                 insuranceStatus[worker.worker_id]?.healthInsurance
// //                                                   ?.required
// //                                                   ? "auto_required"
// //                                                   : "auto_exempted",
// //                                                 e
// //                                               )
// //                                             }
// //                                           >
// //                                             자동 설정
// //                                           </button>
// //                                         </div>
// //                                       </div>

// //                                       {/* 고용보험 */}
// //                                       <div className="border rounded-lg p-4 bg-white">
// //                                         <h5 className="font-medium mb-2">고용보험</h5>
// //                                         <div className="space-y-2 mb-4">
// //                                           <p className="text-sm">
// //                                             <span className="font-medium">자동 판단:</span>{" "}
// //                                             {insuranceStatus[worker.worker_id]?.employmentInsurance
// //                                               ?.required ? (
// //                                               <span className="text-green-600">적용 대상</span>
// //                                             ) : (
// //                                               <span className="text-red-600">제외 대상</span>
// //                                             )}
// //                                           </p>
// //                                           <p className="text-sm">
// //                                             <span className="font-medium">사유:</span>{" "}
// //                                             {insuranceStatus[worker.worker_id]?.employmentInsurance
// //                                               ?.reason || "정보 없음"}
// //                                           </p>
// //                                         </div>
// //                                         <div className="flex space-x-2">
// //                                           <button
// //                                             onClick={(e) =>
// //                                               handleStatusChange(
// //                                                 worker.worker_id,
// //                                                 "employment_insurance",
// //                                                 "manual_required",
// //                                                 e
// //                                               )
// //                                             }
// //                                             className={`px-2 py-1 text-xs rounded ${
// //                                               getEffectiveStatus(
// //                                                 worker.worker_id,
// //                                                 "employment_insurance"
// //                                               ) === "manual_required"
// //                                                 ? "bg-blue-500 text-white"
// //                                                 : "bg-gray-200 text-gray-700 hover:bg-blue-100"
// //                                             }`}
// //                                           >
// //                                             수동 적용
// //                                           </button>
// //                                           <button
// //                                             className={`px-2 py-1 text-xs rounded ${
// //                                               getEffectiveStatus(
// //                                                 worker.worker_id,
// //                                                 "employment_insurance"
// //                                               ) === "manual_exempted"
// //                                                 ? "bg-blue-500 text-white"
// //                                                 : "bg-gray-200 text-gray-700 hover:bg-blue-100"
// //                                             }`}
// //                                             onClick={(e) =>
// //                                               handleStatusChange(
// //                                                 worker.worker_id,
// //                                                 "employment_insurance",
// //                                                 "manual_exempted",
// //                                                 e
// //                                               )
// //                                             }
// //                                           >
// //                                             수동 제외
// //                                           </button>
// //                                           <button
// //                                             className={`px-2 py-1 text-xs rounded ${
// //                                               getEffectiveStatus(
// //                                                 worker.worker_id,
// //                                                 "employment_insurance"
// //                                               ).startsWith("auto_")
// //                                                 ? "bg-blue-500 text-white"
// //                                                 : "bg-gray-200 text-gray-700 hover:bg-blue-100"
// //                                             }`}
// //                                             onClick={(e) =>
// //                                               handleStatusChange(
// //                                                 worker.worker_id,
// //                                                 "employment_insurance",
// //                                                 insuranceStatus[worker.worker_id]
// //                                                   ?.employmentInsurance?.required
// //                                                   ? "auto_required"
// //                                                   : "auto_exempted",
// //                                                 e
// //                                               )
// //                                             }
// //                                           >
// //                                             자동 설정
// //                                           </button>
// //                                         </div>
// //                                       </div>

// //                                       {/* 산재보험 */}
// //                                       <div className="border rounded-lg p-4 bg-white">
// //                                         <h5 className="font-medium mb-2">산재보험</h5>
// //                                         <div className="space-y-2 mb-4">
// //                                           <p className="text-sm">
// //                                             <span className="font-medium">자동 판단:</span>
// //                                             <span className="text-green-600">적용 대상</span>
// //                                           </p>
// //                                           <p className="text-sm">
// //                                             <span className="font-medium">사유:</span> 모든 근로자
// //                                             당연 적용
// //                                           </p>
// //                                         </div>
// //                                         <div className="flex space-x-2">
// //                                           <button
// //                                             className="px-2 py-1 text-xs rounded bg-blue-500 text-white cursor-not-allowed"
// //                                             disabled
// //                                           >
// //                                             항상 적용
// //                                           </button>
// //                                         </div>
// //                                       </div>
// //                                     </div>

// //                                     {/* 사유 입력 */}
// //                                     <div className="mt-6">
// //                                       <h4 className="text-md font-semibold text-blue-700 mb-2">
// //                                         수동 설정 사유
// //                                       </h4>
// //                                       <div className="flex items-start space-x-2">
// //                                         <textarea
// //                                           className="flex-1 p-2 border rounded"
// //                                           rows="2"
// //                                           placeholder="수동 설정 사유를 입력하세요"
// //                                           value={getManualReason(worker.worker_id)}
// //                                           onChange={(e) => {
// //                                             updateManualReasonUI(worker.worker_id, e.target.value);
// //                                           }}
// //                                         ></textarea>
// //                                         <button
// //                                           className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
// //                                           onClick={(e) => {
// //                                             e.stopPropagation();
// //                                             handleReason(
// //                                               worker.worker_id,
// //                                               getManualReason(worker.worker_id),
// //                                               e
// //                                             );
// //                                           }}
// //                                         >
// //                                           저장
// //                                         </button>
// //                                       </div>
// //                                     </div>
// //                                   </div>
// //                                 </div>
// //                               </td>
// //                             </tr>
// //                           )}
// //                         </React.Fragment>
// //                       );
// //                     })
// //                   ) : (
// //                     <tr>
// //                       <td colSpan="11" className="px-6 py-4 text-center text-gray-500">
// //                         {selectedSite
// //                           ? "신규 가입 대상 근로자가 없습니다."
// //                           : "공사현장을 선택해주세요."}
// //                       </td>
// //                     </tr>
// //                   )}
// //                 </tbody>
// //               </table>
// //             </div>
// //           </div>

// //           {/* 유지 중인 근로자 탭 */}
// //           <div className={activeTab === 1 ? "block" : "hidden"}>
// //             <div className="overflow-x-auto mt-4">
// //               <table className="min-w-full divide-y divide-gray-200 border">
// //                 <thead className="bg-gray-50">
// //                   <tr>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       액션
// //                     </th>
// //                   </tr>
// //                 </thead>
// //                 <tbody className="bg-white divide-y divide-gray-200">
// //                   {getActiveEnrollmentWorkers().length > 0 ? (
// //                     getActiveEnrollmentWorkers().map((worker, index) => {
// //                       const workHistory = workersHistory[worker.worker_id] || {};

// //                       return (
// //                         <React.Fragment key={worker.worker_id}>
// //                           <tr
// //                             className={`${
// //                               selectedWorkerId === worker.worker_id
// //                                 ? "bg-blue-50"
// //                                 : "hover:bg-gray-50"
// //                             } cursor-pointer`}
// //                             onClick={() => handleWorkerSelect(worker.worker_id)}
// //                           >
// //                             <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
// //                               {index + 1}
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap">
// //                               <div className="text-sm font-medium text-gray-900">{worker.name}</div>
// //                               <div className="text-xs text-gray-500">{worker.jobName}</div>
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
// //                               {formatResidentNumber(worker.resident_number)}
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
// //                               {worker.age}세
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap text-sm">
// //                               <div>
// //                                 {workHistory.previousMonthWorkDays || 0}일 /{" "}
// //                                 {workHistory.previousMonthWorkHours || 0}시간
// //                               </div>
// //                               <div className="text-xs text-gray-500">
// //                                 {workHistory.firstWorkDate
// //                                   ? `첫 근무일: ${new Date(
// //                                       workHistory.firstWorkDate
// //                                     ).toLocaleDateString()}`
// //                                   : "근무 기록 없음"}
// //                               </div>
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap text-sm">
// //                               <div>
// //                                 {workHistory.currentMonthWorkDays || 0}일 /{" "}
// //                                 {workHistory.currentMonthWorkHours || 0}시간
// //                               </div>
// //                               <div className="text-xs text-gray-500">
// //                                 {workHistory.monthlyWage
// //                                   ? `총 급여: ${workHistory.monthlyWage.toLocaleString()}원`
// //                                   : "0원"}
// //                               </div>
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap">
// //                               <span className="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
// //                                 {isEnrolled(worker.worker_id, "national_pension")
// //                                   ? "가입"
// //                                   : "미가입"}
// //                               </span>
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap">
// //                               <span className="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
// //                                 {isEnrolled(worker.worker_id, "health_insurance")
// //                                   ? "가입"
// //                                   : "미가입"}
// //                               </span>
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap">
// //                               <span className="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
// //                                 {isEnrolled(worker.worker_id, "employment_insurance")
// //                                   ? "가입"
// //                                   : "미가입"}
// //                               </span>
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap">
// //                               <span className="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
// //                                 {isEnrolled(worker.worker_id, "industrial_accident")
// //                                   ? "가입"
// //                                   : "미가입"}
// //                               </span>
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap">
// //                               <button
// //                                 onClick={(e) => handleLoss(worker.worker_id, e)}
// //                                 className="px-3 py-1 bg-red-500 text-white text-xs rounded hover:bg-red-600"
// //                               >
// //                                 상실 처리
// //                               </button>
// //                             </td>
// //                           </tr>

// //                           {/* 상세 정보 패널 - 유지 중인 근로자 탭 */}
// //                           {selectedWorkerId === worker.worker_id && showDetail && (
// //                             <tr>
// //                               <td colSpan="11" className="px-8 py-4 bg-blue-50">
// //                                 <div className="border-t border-blue-200 pt-4">
// //                                   <h3 className="text-lg font-semibold text-blue-800 mb-4">
// //                                     {worker.name} - 상실 처리 정보
// //                                   </h3>

// //                                   <div className="grid grid-cols-2 gap-6">
// //                                     {/* 근로자 정보 */}
// //                                     <div>
// //                                       <h4 className="text-md font-semibold text-blue-700 mb-2">
// //                                         근로자 정보
// //                                       </h4>
// //                                       <div className="space-y-2 text-sm">
// //                                         <p>
// //                                           <span className="font-medium">이름:</span> {worker.name}
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">주민등록번호:</span>{" "}
// //                                           {formatResidentNumber(worker.resident_number)}
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">연락처:</span>{" "}
// //                                           {formatPhoneNumber(worker.contact_number)}
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">나이:</span> {worker.age}세
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">직종:</span>{" "}
// //                                           {worker.jobName}
// //                                         </p>
// //                                       </div>
// //                                     </div>

// //                                     {/* 근무 이력 정보 */}
// //                                     <div>
// //                                       <h4 className="text-md font-semibold text-blue-700 mb-2">
// //                                         근무 이력
// //                                       </h4>
// //                                       <div className="space-y-2 text-sm">
// //                                         <p>
// //                                           <span className="font-medium">첫 근무일:</span>{" "}
// //                                           {workHistory.firstWorkDate
// //                                             ? new Date(
// //                                                 workHistory.firstWorkDate
// //                                               ).toLocaleDateString()
// //                                             : "없음"}
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">전월 근무일수:</span>{" "}
// //                                           {workHistory.previousMonthWorkDays || 0}일
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">전월 근무시간:</span>{" "}
// //                                           {workHistory.previousMonthWorkHours || 0}시간
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">당월 근무일수:</span>{" "}
// //                                           {workHistory.currentMonthWorkDays || 0}일
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">당월 근무시간:</span>{" "}
// //                                           {workHistory.currentMonthWorkHours || 0}시간
// //                                         </p>
// //                                         <p className="text-red-600 font-semibold">
// //                                           당월 등록 없음 (상실 대상)
// //                                         </p>
// //                                       </div>
// //                                     </div>
// //                                   </div>

// //                                   <div className="mt-6">
// //                                     <h4 className="text-md font-semibold text-blue-700 mb-2">
// //                                       4대보험 가입 정보
// //                                     </h4>
// //                                     <div className="bg-white border rounded-lg p-4">
// //                                       <table className="min-w-full divide-y divide-gray-200">
// //                                         <thead>
// //                                           <tr>
// //                                             <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">
// //                                               보험 종류
// //                                             </th>
// //                                             <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">
// //                                               가입일
// //                                             </th>
// //                                             <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">
// //                                               가입사유
// //                                             </th>
// //                                             <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">
// //                                               상태
// //                                             </th>
// //                                           </tr>
// //                                         </thead>
// //                                         <tbody className="divide-y divide-gray-200">
// //                                           {enrollmentRecords[worker.worker_id]?.map(
// //                                             (enrollment, idx) => (
// //                                               <tr key={idx}>
// //                                                 <td className="px-4 py-2 text-sm">
// //                                                   {enrollment.insurance_type ===
// //                                                     "national_pension" && "국민연금"}
// //                                                   {enrollment.insurance_type ===
// //                                                     "health_insurance" && "건강보험"}
// //                                                   {enrollment.insurance_type ===
// //                                                     "employment_insurance" && "고용보험"}
// //                                                   {enrollment.insurance_type ===
// //                                                     "industrial_accident" && "산재보험"}
// //                                                 </td>
// //                                                 <td className="px-4 py-2 text-sm">
// //                                                   {enrollment.acquisition_date &&
// //                                                     new Date(
// //                                                       enrollment.acquisition_date
// //                                                     ).toLocaleDateString()}
// //                                                 </td>
// //                                                 <td className="px-4 py-2 text-sm">
// //                                                   {enrollment.acquisition_reason_code === "01" &&
// //                                                     "신규 취득"}
// //                                                   {enrollment.acquisition_reason_code === "02" &&
// //                                                     "재취득"}
// //                                                   {enrollment.acquisition_reason_code !== "01" &&
// //                                                     enrollment.acquisition_reason_code !== "02" &&
// //                                                     enrollment.acquisition_reason_code}
// //                                                 </td>
// //                                                 <td className="px-4 py-2 text-sm">
// //                                                   {enrollment.loss_date ? (
// //                                                     <span className="text-red-500">
// //                                                       상실 (
// //                                                       {new Date(
// //                                                         enrollment.loss_date
// //                                                       ).toLocaleDateString()}
// //                                                       )
// //                                                     </span>
// //                                                   ) : (
// //                                                     <span className="text-green-500 font-semibold">
// //                                                       가입 중 (상실 필요)
// //                                                     </span>
// //                                                   )}
// //                                                 </td>
// //                                               </tr>
// //                                             )
// //                                           )}
// //                                           {(!enrollmentRecords[worker.worker_id] ||
// //                                             enrollmentRecords[worker.worker_id].length === 0) && (
// //                                             <tr>
// //                                               <td
// //                                                 colSpan="4"
// //                                                 className="px-4 py-2 text-sm text-center text-gray-500"
// //                                               >
// //                                                 가입 정보가 없습니다.
// //                                               </td>
// //                                             </tr>
// //                                           )}
// //                                         </tbody>
// //                                       </table>
// //                                     </div>

// //                                     <div className="mt-4 bg-yellow-50 border border-yellow-200 rounded-lg p-4">
// //                                       <p className="text-yellow-800">
// //                                         <span className="font-semibold">주의:</span> 당월 근무
// //                                         기록이 없는 근로자입니다. 실제로 현장에 더 이상 출근하지
// //                                         않는 경우 상실 처리가 필요합니다.
// //                                       </p>
// //                                       <p className="text-yellow-800 mt-2">
// //                                         상실일이 속한 달의 전월까지 보험료가 부과되므로, 가능한 빨리
// //                                         상실 처리하는 것이 좋습니다.
// //                                       </p>
// //                                     </div>
// //                                   </div>
// //                                 </div>
// //                               </td>
// //                             </tr>
// //                           )}
// //                         </React.Fragment>
// //                       );
// //                     })
// //                   ) : (
// //                     <tr>
// //                       <td colSpan="11" className="px-6 py-4 text-center text-gray-500">
// //                         {selectedSite ? "유지 중인 근로자가 없습니다." : "공사현장을 선택해주세요."}
// //                       </td>
// //                     </tr>
// //                   )}
// //                 </tbody>
// //               </table>
// //             </div>
// //           </div>

// //           {/* 상실 대상자 탭 */}
// //           <div className={activeTab === 2 ? "block" : "hidden"}>
// //             <div className="overflow-x-auto mt-4">
// //               <table className="min-w-full divide-y divide-gray-200 border">
// //                 <thead className="bg-gray-50">
// //                   <tr>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       No.
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       이름
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       주민등록번호
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       나이
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       전월 근무
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       당월 근무
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       국민연금
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       건강보험
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       고용보험
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       산재보험
// //                     </th>
// //                     <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
// //                       액션
// //                     </th>
// //                   </tr>
// //                 </thead>
// //                 <tbody className="bg-white divide-y divide-gray-200">
// //                   {getLossEnrollmentCandidateWorkers().length > 0 ? (
// //                     getLossEnrollmentCandidateWorkers().map((worker, index) => {
// //                       const workHistory = workersHistory[worker.worker_id] || {};

// //                       return (
// //                         <React.Fragment key={worker.worker_id}>
// //                           <tr
// //                             className={`${
// //                               selectedWorkerId === worker.worker_id
// //                                 ? "bg-blue-50"
// //                                 : "hover:bg-gray-50"
// //                             } cursor-pointer`}
// //                             onClick={() => handleWorkerSelect(worker.worker_id)}
// //                           >
// //                             <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
// //                               {index + 1}
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap">
// //                               <div className="text-sm font-medium text-gray-900">{worker.name}</div>
// //                               <div className="text-xs text-gray-500">{worker.jobName}</div>
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
// //                               {formatResidentNumber(worker.resident_number)}
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
// //                               {worker.age}세
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap text-sm">
// //                               <div>
// //                                 {workHistory.previousMonthWorkDays || 0}일 /{" "}
// //                                 {workHistory.previousMonthWorkHours || 0}시간
// //                               </div>
// //                               <div className="text-xs text-gray-500">
// //                                 {workHistory.firstWorkDate
// //                                   ? `첫 근무일: ${new Date(
// //                                       workHistory.firstWorkDate
// //                                     ).toLocaleDateString()}`
// //                                   : "근무 기록 없음"}
// //                               </div>
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap text-sm">
// //                               <div>
// //                                 {workHistory.currentMonthWorkDays || 0}일 /{" "}
// //                                 {workHistory.currentMonthWorkHours || 0}시간
// //                               </div>
// //                               <div className="text-xs text-red-500 font-semibold">미등록</div>
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap">
// //                               {isEnrolled(worker.worker_id, "national_pension") ? (
// //                                 <span className="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
// //                                   상실 필요
// //                                 </span>
// //                               ) : (
// //                                 <span className="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
// //                                   미가입
// //                                 </span>
// //                               )}
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap">
// //                               {isEnrolled(worker.worker_id, "health_insurance") ? (
// //                                 <span className="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
// //                                   상실 필요
// //                                 </span>
// //                               ) : (
// //                                 <span className="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
// //                                   미가입
// //                                 </span>
// //                               )}
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap">
// //                               {isEnrolled(worker.worker_id, "employment_insurance") ? (
// //                                 <span className="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
// //                                   상실 필요
// //                                 </span>
// //                               ) : (
// //                                 <span className="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
// //                                   미가입
// //                                 </span>
// //                               )}
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap">
// //                               {isEnrolled(worker.worker_id, "industrial_accident") ? (
// //                                 <span className="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
// //                                   상실 필요
// //                                 </span>
// //                               ) : (
// //                                 <span className="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
// //                                   미가입
// //                                 </span>
// //                               )}
// //                             </td>
// //                             <td className="px-4 py-3 whitespace-nowrap">
// //                               <button
// //                                 onClick={(e) => handleLoss(worker.worker_id, e)}
// //                                 className="px-3 py-1 bg-red-500 text-white text-xs rounded hover:bg-red-600"
// //                               >
// //                                 상실 처리
// //                               </button>
// //                             </td>
// //                           </tr>

// //                           {/* 상세 정보 패널 - 상실 대상자 탭 */}
// //                           {selectedWorkerId === worker.worker_id && showDetail && (
// //                             <tr>
// //                               <td colSpan="11" className="px-8 py-4 bg-blue-50">
// //                                 <div className="border-t border-blue-200 pt-4">
// //                                   <h3 className="text-lg font-semibold text-blue-800 mb-4">
// //                                     {worker.name} - 상실 처리 정보
// //                                   </h3>

// //                                   <div className="grid grid-cols-2 gap-6">
// //                                     {/* 근로자 정보 */}
// //                                     <div>
// //                                       <h4 className="text-md font-semibold text-blue-700 mb-2">
// //                                         근로자 정보
// //                                       </h4>
// //                                       <div className="space-y-2 text-sm">
// //                                         <p>
// //                                           <span className="font-medium">이름:</span> {worker.name}
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">주민등록번호:</span>{" "}
// //                                           {formatResidentNumber(worker.resident_number)}
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">연락처:</span>{" "}
// //                                           {formatPhoneNumber(worker.contact_number)}
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">나이:</span> {worker.age}세
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">직종:</span>{" "}
// //                                           {worker.jobName}
// //                                         </p>
// //                                       </div>
// //                                     </div>

// //                                     {/* 근무 이력 정보 */}
// //                                     <div>
// //                                       <h4 className="text-md font-semibold text-blue-700 mb-2">
// //                                         근무 이력
// //                                       </h4>
// //                                       <div className="space-y-2 text-sm">
// //                                         <p>
// //                                           <span className="font-medium">첫 근무일:</span>{" "}
// //                                           {workHistory.firstWorkDate
// //                                             ? new Date(
// //                                                 workHistory.firstWorkDate
// //                                               ).toLocaleDateString()
// //                                             : "없음"}
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">전월 근무일수:</span>{" "}
// //                                           {workHistory.previousMonthWorkDays || 0}일
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">전월 근무시간:</span>{" "}
// //                                           {workHistory.previousMonthWorkHours || 0}시간
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">당월 근무일수:</span>{" "}
// //                                           {workHistory.currentMonthWorkDays || 0}일
// //                                         </p>
// //                                         <p>
// //                                           <span className="font-medium">당월 근무시간:</span>{" "}
// //                                           {workHistory.currentMonthWorkHours || 0}시간
// //                                         </p>
// //                                         <p className="text-red-600 font-semibold">
// //                                           당월 등록 없음 (상실 대상)
// //                                         </p>
// //                                       </div>
// //                                     </div>
// //                                   </div>

// //                                   <div className="mt-6">
// //                                     <h4 className="text-md font-semibold text-blue-700 mb-2">
// //                                       4대보험 가입 정보
// //                                     </h4>
// //                                     <div className="bg-white border rounded-lg p-4">
// //                                       <table className="min-w-full divide-y divide-gray-200">
// //                                         <thead>
// //                                           <tr>
// //                                             <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">
// //                                               보험 종류
// //                                             </th>
// //                                             <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">
// //                                               가입일
// //                                             </th>
// //                                             <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">
// //                                               가입사유
// //                                             </th>
// //                                             <th className="px-4 py-2 text-left text-sm font-medium text-gray-500">
// //                                               상태
// //                                             </th>
// //                                           </tr>
// //                                         </thead>
// //                                         <tbody className="divide-y divide-gray-200">
// //                                           {enrollmentRecords[worker.worker_id]?.map(
// //                                             (enrollment, idx) => (
// //                                               <tr key={idx}>
// //                                                 <td className="px-4 py-2 text-sm">
// //                                                   {enrollment.insurance_type ===
// //                                                     "national_pension" && "국민연금"}
// //                                                   {enrollment.insurance_type ===
// //                                                     "health_insurance" && "건강보험"}
// //                                                   {enrollment.insurance_type ===
// //                                                     "employment_insurance" && "고용보험"}
// //                                                   {enrollment.insurance_type ===
// //                                                     "industrial_accident" && "산재보험"}
// //                                                 </td>
// //                                                 <td className="px-4 py-2 text-sm">
// //                                                   {enrollment.acquisition_date &&
// //                                                     new Date(
// //                                                       enrollment.acquisition_date
// //                                                     ).toLocaleDateString()}
// //                                                 </td>
// //                                                 <td className="px-4 py-2 text-sm">
// //                                                   {enrollment.acquisition_reason_code === "01" &&
// //                                                     "신규 취득"}
// //                                                   {enrollment.acquisition_reason_code === "02" &&
// //                                                     "재취득"}
// //                                                   {enrollment.acquisition_reason_code !== "01" &&
// //                                                     enrollment.acquisition_reason_code !== "02" &&
// //                                                     enrollment.acquisition_reason_code}
// //                                                 </td>
// //                                                 <td className="px-4 py-2 text-sm">
// //                                                   {enrollment.loss_date ? (
// //                                                     <span className="text-red-500">
// //                                                       상실 (
// //                                                       {new Date(
// //                                                         enrollment.loss_date
// //                                                       ).toLocaleDateString()}
// //                                                       )
// //                                                     </span>
// //                                                   ) : (
// //                                                     <span className="text-green-500 font-semibold">
// //                                                       가입 중 (상실 필요)
// //                                                     </span>
// //                                                   )}
// //                                                 </td>
// //                                               </tr>
// //                                             )
// //                                           )}
// //                                           {(!enrollmentRecords[worker.worker_id] ||
// //                                             enrollmentRecords[worker.worker_id].length === 0) && (
// //                                             <tr>
// //                                               <td
// //                                                 colSpan="4"
// //                                                 className="px-4 py-2 text-sm text-center text-gray-500"
// //                                               >
// //                                                 가입 정보가 없습니다.
// //                                               </td>
// //                                             </tr>
// //                                           )}
// //                                         </tbody>
// //                                       </table>
// //                                     </div>

// //                                     <div className="mt-4 bg-yellow-50 border border-yellow-200 rounded-lg p-4">
// //                                       <p className="text-yellow-800">
// //                                         <span className="font-semibold">주의:</span> 당월 근무
// //                                         기록이 없는 근로자입니다. 실제로 현장에 더 이상 출근하지
// //                                         않는 경우 상실 처리가 필요합니다.
// //                                       </p>
// //                                       <p className="text-yellow-800 mt-2">
// //                                         상실일이 속한 달의 전월까지 보험료가 부과되므로, 가능한 빨리
// //                                         상실 처리하는 것이 좋습니다.
// //                                       </p>
// //                                     </div>
// //                                   </div>
// //                                 </div>
// //                               </td>
// //                             </tr>
// //                           )}
// //                         </React.Fragment>
// //                       );
// //                     })
// //                   ) : (
// //                     <tr>
// //                       <td colSpan="11" className="px-6 py-4 text-center text-gray-500">
// //                         {selectedSite ? "상실 대상 근로자가 없습니다." : "공사현장을 선택해주세요."}
// //                       </td>
// //                     </tr>
// //                   )}
// //                 </tbody>
// //               </table>
// //             </div>
// //           </div>
// //         </div>

// //         {/* 하단 버튼 영역 */}
// //         <div className="flex justify-end space-x-4 mt-6">
// //           <Link
// //             href="/daily-report"
// //             className="px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600"
// //           >
// //             일용근로자 급여명세서
// //           </Link>
// //           <button
// //             className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
// //             onClick={handleSaveAll}
// //           >
// //             모든 설정 저장
// //           </button>
// //         </div>
// //       </div>
// //     </RoleGuard>
// //   );
// // }

// // export default InsuranceEnrollmentsPage;
